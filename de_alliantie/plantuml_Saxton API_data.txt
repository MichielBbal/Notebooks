@startuml
class AddressBook.AddressBook{
companyId
id
referenceType
displayName
birthdate
gender
email
phone
mobilePhone
address
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
}
class AddressBook.AddressBookRelationEntity{
organizationId
name
roleType
validFrom
validTo
}
class Addresses.Address{
city
country
houseNumber
houseNumberAddition
street
zipCode
addressPurpose
id
displayAddress
validFrom
}
class Addresses.AddressBookAddress{
city
country
houseNumber
houseNumberAddition
street
zipCode
addressPurpose
}
class Addresses.AddressCreate{
city
country
houseNumber
houseNumberAddition
street
zipCode
validFrom
addressPurposeId
}
class Addresses.AddressPrimaryCreate{
city
country
houseNumber
houseNumberAddition
street
zipCode
validFrom
}
class Addresses.AddressPurpose{
id
description
}
class Addresses.AddressUpdate{
city
country
houseNumber
houseNumberAddition
street
zipCode
}
class Addresses.LogisticsAddress{
city
country
houseNumber
houseNumberAddition
street
zipCode
}
class Addresses.Municipality{
id
description
}
class Addresses.RealEstateAddress{
city
country
houseNumber
houseNumberAddition
street
zipCode
id
municipality
}
class ArchiveCompact.Archive{
id
externalID
name
indexes
}
class ArchiveCompact.Document{
id
arcID
arcIDExt
arcName
externalKey
creationDate
creator
title
retentionDate
indexes
files
externalID
}
class ArchiveCompact.DocumentCreate{
arcID
arcIDExt
arcName
externalKey
files
indexes
retentionYears
}
class ArchiveCompact.DocumentFile{
id
name
position
versions
}
class ArchiveCompact.DocumentFileCreate{
id
name
remarks
}
class ArchiveCompact.DocumentFileVersion{
version
mimeType
name
id
remarks
createDate
creator
downloadInfo
}
class ArchiveCompact.DocumentSearch{
maxHits
arcIDs
text
indexes
dateFrom
dateUntill
}
class ArchiveCompact.Index{
id
name
externalID
values
}
class ArchiveCompact.IndexCreate{
id
name
externalID
values
}
class ArchiveCompact.IndexSearch{
id
value
}
class Asbestos.AsbestosProject{
externalId
description
status
contactName
createdDate
modifiedDate
realestateObjects
}
class Asbestos.AsbestosSource{
externalId
binding
constructionUnit
code
condition
containingAsbestos
fixingMethod
location
quantity
quantityType
recommendedMeasure
remediationMethod
sizePerUnit
smaRiskClass
status
type
unit
asbestosProjectId
disposal
realEstateObject
}
class Asbestos.AsbestosTask{
externalId
status
fullInspection
vendorId
vendorName
createdDate
modifiedDate
startDateActivities
asbestosProjectId
type
}
class Asbestos.Disposal{
choice
description
quantity
quantityType
sizePerUnit
unit
}
class Asbestos.RealestateObjects{
id
description
}
class Communications.Communication{
id
description
companyId
communicationType
value
extension
isPrimary
isPrivate
isMobilePhone
communicationPurpose
referenceId
}
class Communications.CommunicationCreate{
description
communicationTypeId
value
extension
isPrivate
communicationPurposeId
}
class Communications.CommunicationPurpose{
id
description
}
class Communications.CommunicationType{
id
description
}
class Communications.CommunicationUpdate{
description
value
extension
isPrivate
}
class CommunityNotification.CommunityNotification{
id
type
employee
realEstate
description
registrationDateTime
settledDateTime
closedDateTime
reasonClosed
status
subject
agression
importance
urgency
memo
subjectLocation
contacts
}
class CommunityNotification.CommunityNotificationActionPlan{
id
action
sequence
registrationDateTime
settledBeforeDateTime
status
closedDateTime
procedure
memo
executivePerson
description
}
class CommunityNotification.CommunityNotificationActionPlanAction{
id
description
}
class CommunityNotification.CommunityNotificationAggression{
type
id
description
}
class CommunityNotification.CommunityNotificationContact{
role
referenceId
referenceType
name
registrationDateTime
}
class CommunityNotification.CommunityNotificationContactCreate{
roleId
referenceId
referenceType
registrationDateTime
}
class CommunityNotification.CommunityNotificationCreate{
typeId
realEstate
description
registrationDateTime
subjectId
agressionId
importanceId
urgencyId
memo
contacts
}
class CommunityNotification.CommunityNotificationEstateType{
id
description
}
class CommunityNotification.CommunityNotificationImportance{
type
id
description
}
class CommunityNotification.CommunityNotificationProcedure{
id
description
}
class CommunityNotification.CommunityNotificationRealEstateObject{
id
realEstateObjectId
estateType
address
name
}
class CommunityNotification.CommunityNotificationRealEstateObjectCreate{
id
zipCode
houseNumber
houseNumberAddition
}
class CommunityNotification.CommunityNotificationReasonClosed{
id
description
}
class CommunityNotification.CommunityNotificationRole{
id
description
}
class CommunityNotification.CommunityNotificationStatus{
id
description
}
class CommunityNotification.CommunityNotificationSubject{
type
id
description
}
class CommunityNotification.CommunityNotificationSubjectLocation{
id
description
}
class CommunityNotification.CommunityNotificationType{
id
description
}
class CommunityNotification.CommunityNotificationUrgency{
type
id
description
}
class CommunityNotification.ExecutivePerson{
referenceType
referenceId
name
email
mobilePhone
phone
}
class Contracts.AdditionalPayer{
bankAccount
customerId
paymentModeId
validFrom
signDateMandate
}
class Contracts.BuyRent{
id
description
}
class Contracts.College{
id
name
}
class Contracts.Contract{
id
address
approvedPreliminaryContract
category
college
terminationDate
terminationReason
companyId
customerId
invoiceDivergenceDate
invoiceFrom
invoiceTo
linkedContracts
name
noticeDateTenant
noticeTenant
paymentDetails
realEstateObjectId
signDate
status
studentNumber
type
validFrom
validTo
plotType
housing
serviceObject
}
class Contracts.ContractAccountabilityCreate{
accountabilityIncome
collectiveIncome
dateAssigned
dateOfBirth
exceptionReasonId
focusGroupId
occupants
urgencyId
}
class Contracts.ContractActivation{
validFrom
signDate
}
class Contracts.ContractCategory{
companyId
id
description
}
class Contracts.ContractCreate{
categoryId
collegePartyId
customerId
invoiceDivergenceDateId
invoiceFrom
invoiceTo
name
noticeTenantId
occupiedFrom
occupiedTo
paymentDetails
realEstateObjectId
signDate
studentNumber
typeId
validFrom
validTo
vatCodeId
vatLiability
}
class Contracts.ContractEnd{
endDate
}
class Contracts.ContractExceptionReason{
id
description
}
class Contracts.ContractForm{
id
companyid
description
type
}
class Contracts.ContractInvoiceDivergenceDate{
id
description
}
class Contracts.ContractNoticeTenant{
companyId
id
numberOfUnits
timeUnit
}
class Contracts.ContractPaymentDetails{
bankAccount
customerId
customerPaymentMode
invoiceEmail
paymentTerm
}
class Contracts.ContractPeriod{
id
name
}
class Contracts.ContractPrice{
companyID
contractId
eligibleRent
netRent
grossRent
rentComponents
}
class Contracts.ContractPriceAdjReason{
id
companyId
description
}
class Contracts.ContractRelation{
id
referenceType
referenceId
roleId
roleType
roleDescription
contactType
contactId
validFrom
validTo
name
email
phone
mobile
}
class Contracts.ContractRelationSearch{
referenceType
referenceId
roleType
roleId
contactType
contactId
contractId
validFrom
validTo
contractDescription
name
email
phone
mobile
}
class Contracts.ContractSigning{
signDate
}
class Contracts.ContractStatus{
id
description
}
class Contracts.ContractTermination{
endDate
noticeDate
terminationDate
terminationReasonId
recommendTenant
viewingAgreed
}
class Contracts.ContractTerminationReason{
companyId
id
description
}
class Contracts.ContractType{
companyId
id
description
}
class Contracts.CostType{
id
description
}
class Contracts.LinkedContract{
companyId
contractId
}
class Contracts.ObjectType{
id
description
}
class Contracts.PaymentDetailsCreate{
bankAccount
customerId
customerPaymentModeId
signdateMandate
}
class Contracts.RealEstateObject{
companyId
id
objectId
name
buildingCategory
buildingType
destination
district
cbsDistrict
type
financialComplex
technicalComplex
groundId
housing
neighbourhood
cbsNeighbourhood
plotType
ownershipType
builtYear
renovationYear
contractForms
maximumRentAmount
grossRent
netRent
eligibleRent
address
buildingId
realEstateType
operationalDestination
floor
rayon
landRegister
typeObjectSpace
targetRent
inExploitation
outExploitation
realEstateCategory
availableForRentDate
block
mutationId
segment
}
class Contracts.RentComponent{
id
costType
costGroup
typeCosts
taxItemGroup
taxAmount
employeeAdaptable
validFrom
validTo
amount
tenantChoice
rentEligible
period
}
class Contracts.RentComponentCreate{
costTypeId
validFrom
validTo
priceAdjReasonId
price
}
class Contracts.TypeCosts{
id
description
}
class Correspondence.Correspondence{
referenceType
referenceTypeId
message
documentFileGuid
documentFilename
companyId
}
class Correspondence.CorrespondenceCreate{
referenceType
referenceTypeIds
command
returnDocument
}
class CRM.Activity{
id
companyId
endDateTime
startDateTime
employee
closed
category
type
purpose
priority
phase
status
closedBy
description
plan
connections
}
class CRM.ActivityClose{
memo
}
class CRM.ActivityConnection{
id
primary
referenceType
}
class CRM.ActivityCreate{
employeeId
closed
description
closedByEmployeeId
priorityId
purpose
typeId
categoryId
dateClosed
endDateTime
startDateTime
referenceType
referenceId
}
class CRM.Area{
id
description
}
class CRM.Category{
id
description
}
class CRM.ContactMomentCreate{
originId
startDateTime
userId
realEstateObjectId
}
class CRM.ContactMomentEnd{
endDateTime
}
class CRM.ContactMomentLine{
id
companyId
area
type
description
answer
hasAttachment
activities
question
status
sequence
avoidable
internalMemo
}
class CRM.ContactMomentLineCreate{
areaId
typeId
description
answer
question
avoidable
internalMemo
}
class CRM.ContactMomentLineOverview{
id
companyId
area
type
description
answer
activities
question
status
sequence
avoidable
contactMomentSummary
internalMemo
}
class CRM.ContactMomentLineSearchChild{
id
companyId
area
type
contactMoment
}
class CRM.ContactMomentLineSearchParent{
id
referenceId
referenceType
startDateTime
endDateTime
}
class CRM.ContactMomentLineStatus{
id
statusId
}
class CRM.ContactMomentLineStatusRequest{
id
statusId
}
class CRM.ContactMomentOverview{
id
companyId
realEstateObjectId
origin
description
startDateTime
endDateTime
lines
user
}
class CRM.ContactMomentSummary{
companyId
id
realEstateObjectId
referenceId
referenceType
origin
description
startDateTime
endDateTime
user
}
class CRM.Origin{
id
description
}
class CRM.Phase{
id
description
}
class CRM.Plan{
id
description
}
class CRM.Priority{
id
description
}
class CRM.TaskArea{
taskTypes
id
description
}
class CRM.TaskType{
sequence
id
description
}
class CRM.Type{
id
description
}
class CRM.User{
id
description
}
class Customers.BailiffDebtSettlement{
companyId
id
amount
amountOpen
contact
contractId
dateSettlementStarted
dateSettlementStopped
dateEvictionPlanned
dateEvictionExecuted
dateStarted
dateStopped
kind
extraInfo
dossierId
status
reasonStarted
dateAgreementValidFrom
dateAgreementValidTo
reasonStopped
endEvictionReason
}
class Customers.CollectionInvoice{
id
type
amount
openAmount
contractId
currencyCode
dueDate
createdDate
transactions
}
class Customers.CollectionInvoiceTransaction{
voucher
amount
openAmount
transDate
description
}
class Customers.Curator{
referenceType
referenceId
name
phone
email
birthDate
}
class Customers.CuratorContact{
referenceType
referenceId
displayname
phoneWork
emailWork
birthDate
}
class Customers.Customer{
amountOpen
companyId
currencyCode
hasActiveDebtSettlement
hasActivePaymentScheme
id
referenceId
referenceType
}
class Customers.CustomerCollectionLetterCode{
id
description
}
class Customers.CustomerCreate{
referenceId
referenceType
}
class Customers.CustomerInvoice{
voucher
dueDate
amount
}
class Customers.CustomerMandateCreate{
bankAccount
reason
}
class Customers.CustomerPaymentDetails{
bankAccount
customerId
customerPaymentMode
invoiceEmail
signdateMandate
}
class Customers.CustomerPaymentDetailsCreate{
bankAccount
customerId
paymentModeId
invoiceEmail
invoiceMethodId
}
class Customers.CustomerPaymentMode{
id
description
paymentType
mandateRequired
}
class Customers.CustomerPaymentType{
id
description
}
class Customers.CustomerSettleTransaction{
reference
referenceId
amountPaid
transactionDate
extTransactionId
invoices
}
class Customers.CustomerTransaction{
amount
amountOpen
collectionLetterCode
collectionLetterDate
companyId
contractId
currencyCode
customerId
dueDate
invoiceId
isMovedToDebtSettlement
isMovedToPaymentScheme
paymentDetails
transactionCategory
transactionDate
transactionText
transactionType
voucher
status
marked
isTransactionReversed
}
class Customers.CustomerTransactionCategoryType{
id
description
}
class Customers.CustomerTransactionSettlement{
companyId
customerId
voucher
amount
invoiceId
currencyCode
transactionDate
transactionText
transactionType
settleDate
}
class Customers.CustomerTransactionStatus{
id
description
}
class Customers.CustomerVerdict{
id
verdictDate
amount
debtSettlementId
type
}
class Customers.DebtSettlement{
companyId
id
amount
amountOpen
contact
contractId
dateStarted
dateStopped
dateSettlementStarted
dateSettlementStopped
kind
extraInfo
dossierId
status
reasonStopped
reasonStarted
}
class Customers.DebtSettlementBaseType{
id
description
}
class Customers.DebtSettlementContact{
companyId
contactPersonId
contactPersonName
organizationName
email
phone
mobilePhone
}
class Customers.DebtSettlementKind{
id
companyId
description
type
}
class Customers.DebtSettlementSearchResponse{
companyId
debtSettlementId
dossierId
customerId
customerName
contractId
address
dateStarted
}
class Customers.DebtSettlementStatus{
id
description
}
class Customers.DebtSettlementTransaction{
companyId
debtSettlementId
amount
amountOpen
transactionType
transactionDate
dueDate
voucher
}
class Customers.EndEvictionReason{
id
description
}
class Customers.PaymentScheme{
companyId
id
customerId
contractId
dateCompleted
dateStarted
dateCanceled
dateStopped
openAmount
totalAmount
description
numberOfTerms
status
paymentSchemeTerms
paymentDetails
currencyCode
voucher
}
class Customers.PaymentSchemeCreate{
totalAmountOpen
numberOfTerms
startDate
customerPaymentDetails
vouchers
terms
}
class Customers.PaymentSchemeTerm{
amountOpen
amount
dueDate
}
class Customers.PaymentSchemeTermCreate{
dueDate
amount
}
class Customers.PaymentSchemeVoucherCreate{
voucher
amountOpen
}
class Customers.PaymentTerm{
id
description
}
class Customers.PaymSchemeStatus{
id
description
}
class Customers.ReasonStarted{
id
description
}
class Customers.ReasonStopped{
id
description
}
class Customers.Receivership{
id
startDate
endDate
curator
curatorContact
type
}
class Customers.ReceivershipType{
id
description
}
class Customers.TransactionType{
id
description
}
class Customers.Type{
id
description
}
class Customers.VerdictType{
id
description
}
class DecisionTree.DecisionTree{
sessionId
id
description
question
answers
selectedAnswerId
flowPaths
variables
treeEnd
setVariables
infoLines
exceptions
companyId
}
class DecisionTree.DecisionTreeAnswer{
id
questionId
text
description
value
highlight
tags
}
class DecisionTree.DecisionTreeException{
message
exceptionType
innerException
}
class DecisionTree.DecisionTreeInfoLine{
description
type
relatedVarId
varValue
}
class DecisionTree.DecisionTreeQuestion{
id
text
description
showFlowPath
showFlowVar
tileLayout
tags
}
class DecisionTree.DecisionTreeTag{
id
description
value
type
}
class DecisionTree.DecisionTreeType{
id
description
}
class DecisionTree.ExceptionType{
id
description
}
class DecisionTree.InfoLineType{
id
description
}
class Document.DocumentChecksum{
checksum
}
class Document.DocumentEntityName{
name
}
class Document.DocumentFile{
base64
}
class Document.DocumentInput{
entityName
entityId
documentReference
}
class Document.DocumentReference{
id
companyid
name
notes
docuType
filename
checksum
}
class Document.DocumentReferenceCreate{
name
notes
docuTypeId
filename
checksum
}
class Document.DocuType{
id
description
}
class Dossiers.Dossier{
id
type
startDate
endDate
historic
memo
}
class Dossiers.DossierCreate{
referenceType
referenceId
startDate
endDate
memo
dossierTypeId
}
class Dossiers.DossierLine{
id
createdDate
createdBy
description
memo
}
class Dossiers.DossierLineCreate{
description
memo
}
class Dossiers.DossierType{
id
signal
}
class Financials.OrganizationBankAccount{
companyId
id
iban
bankAccountNumber
bic
gAccount
status
hasMandate
}
class Financials.PaymentDetailsCreate{
bankAccount
paymentModeId
signDateMandate
}
class Financials.PersonBankAccount{
companyId
id
iban
bankAccountNumber
bic
status
hasMandate
}
class General.Attribute{
companyId
id
attributeId
attributeType
attributeTypeId
category
name
type
unit
value
}
class General.AttributeCategory{
id
description
}
class General.AttributeGroup{
id
description
}
class General.AttributeType{
id
description
}
class General.AttributeTypeList{
id
description
}
class General.AttributeUpdate{
attributeType
attributeTypeId
attributeId
value
id
}
class General.AttributeValue{
attributeId
category
type
datatype
decimals
unit
values
}
class General.AttributeValueParm{
isDefault
value
}
class General.Company{
id
description
}
class General.ContactType{
id
description
}
class General.Created{
id
}
class General.EntityData{
fields
}
class General.EntityField{
name
caption
type
value
}
class General.EntitySearch{
entity
searchField
searchText
}
class General.KeyValuePair{
key
value
}
class General.ListBase{
id
description
}
class General.RoleType{
id
description
}
class General.Status{
id
description
}
class General.SystemInformation{
erpName
versionNumber
aosServer
portNumber
hotfixes
environment
currentUser
}
class General.TimeUnit{
id
description
}
class General.Unit{
id
description
}
class General.User{
employeeId
firstName
infix
lastName
referenceType
referenceId
}
class HomeAdaptations.EndStatus{
id
description
}
class HomeAdaptations.HomeAdaptation{
id
description
type
origin
inventoryItem
requestStatus
status
endStatus
requestDate
}
class HomeAdaptations.HomeAdaptationCreate{
typeId
originId
requestDate
description
inventoryItemId
}
class HomeAdaptations.InventoryItem{
id
description
}
class HomeAdaptations.Origin{
id
description
}
class HomeAdaptations.RequestStatus{
id
description
}
class HomeAdaptations.Type{
id
description
}
class Hrm.Employee{
id
firstName
middleName
lastName
phoneWork
emailWork
referenceType
referenceId
phone
email
mobilePhone
}
class Income.GrossNet{
id
description
}
class Income.IncomeCreate{
grossNetId
income
periodId
typeId
}
class Income.IncomePeriod{
id
description
}
class Income.IncomeType{
id
description
}
class Income.IncomeUpdate{
grossNetId
income
periodId
typeId
}
class Income.PersonIncome{
companyId
grossNet
id
income
period
type
}
class Inspection.InspectionActionCode{
id
description
}
class Inspection.InspectionActivity{
id
description
quantity
unit
unitPrice
costs
costsWithTax
discountPercentage
invoiceAmount
isCustomerPayer
isCustomerExecutor
takeOver
resolved
remarks
actionCode
serviceTaskId
}
class Inspection.InspectionAppointment{
id
type
startDateTime
endDateTime
employee
lastInspection
status
process
inspectionType
memo
rescheduleIsPossible
reasonNotRealized
}
class Inspection.InspectionCreate{
processTypeId
typeId
inspectionTypeId
inspectorId
startDateTIme
endDateTime
memo
}
class Inspection.InspectionEmployee{
id
name
}
class Inspection.InspectionNotRealizedRequest{
reasonId
}
class Inspection.InspectionObservation{
rubric
part
subPart
type
activity
}
class Inspection.InspectionPart{
id
description
}
class Inspection.InspectionProcess{
id
closed
type
contractId
freeForRentDate
serviceCallId
supplier
}
class Inspection.InspectionProcessType{
id
description
}
class Inspection.InspectionReasonNotRealized{
id
description
}
class Inspection.InspectionResult{
observations
process
}
class Inspection.InspectionRubric{
id
description
}
class Inspection.InspectionSchedule{
resourceId
startDateTime
endDateTime
}
class Inspection.InspectionStatus{
id
description
}
class Inspection.InspectionStatusUpdate{
finalInvoice
lastInspection
}
class Inspection.InspectionSubPart{
id
description
}
class Inspection.InspectionType{
id
description
}
class Inspection.InvoiceActivityCreate{
activityId
costs
locationId
partId
quantity
subPartId
vatgroupId
}
class Inspection.MeterReadingUpdate{
reading
typeId
}
class MailToPay.MailToPayCollection{
collectionOrderId
}
class MailToPay.MailToPayCollectionParm{
collectionOrderIds
}
class MailToPay.MailToPayPostEntity{
amountPaid
flowId
mailToPayRequestTypeId
invoices
}
class MailToPay.MailToPayRequest{
collectionOrderId
customerId
amount
remainAmount
dateTimeSent
invoices
}
class Maintenance.ActionCode{
id
description
}
class Maintenance.BundledServiceTask{
callId
bundleId
tasks
}
class Maintenance.BundledServiceTasksParm{
description
originId
subject
resourceId
planProcessId
sessions
}
class Maintenance.BundledTask{
taskId
}
class Maintenance.BundledTaskSession{
description
sessionId
startDateTime
endDateTime
internalDescription
}
class Maintenance.CallType{
id
description
}
class Maintenance.Cause{
id
description
}
class Maintenance.ContractBase{
id
description
}
class Maintenance.DeadLine{
id
description
days
}
class Maintenance.InvoiceFor{
id
description
}
class Maintenance.MaintenanceCustomer{
id
name
email
phone
}
class Maintenance.MaintenanceType{
id
description
}
class Maintenance.ObjectType{
id
description
}
class Maintenance.Origin{
id
description
}
class Maintenance.PerformedBy{
id
description
}
class Maintenance.PlanningBundle{
planningBundleRequired
noPlanningRequired
noTaskPossible
}
class Maintenance.PlanningBundleParm{
planBundleSessionIds
}
class Maintenance.PlanningBundleProposal{
sequence
totalPlanTime
planProcessId
blockTime
planningItems
}
class Maintenance.PlanningBundleProposalItem{
sessionId
taskId
deadlineExceeded
startDateTime
endDateTime
resource
}
class Maintenance.PlanningBundleProposalParm{
sessions
bundleId
startDateTime
endDateTime
quantity
planningModelId
taskId
}
class Maintenance.PlanningBundleRequired{
number
sessions
}
class Maintenance.PlanningBundleSession{
sessionId
}
class Maintenance.PlanProposalCreate{
resourceId
startDateTime
endDateTime
planProcessId
externalPlanId
}
class Maintenance.Project{
id
description
}
class Maintenance.ProjectGroup{
id
description
}
class Maintenance.PropertyRealEstateObject{
id
description
companyId
}
class Maintenance.ReasonNotRealized{
id
description
}
class Maintenance.RegisterActivity{
causeId
chargeableTo
employeeIdMobile
status
hours
materials
signatures
descriptions
}
class Maintenance.RegisterDescription{
description
}
class Maintenance.RegisterHour{
externalLineId
startDateTime
endDateTime
activityId
activityDetailId
}
class Maintenance.RegisterMaterial{
externalLineId
date
quantity
unitId
articleId
externalArticleId
warehouseId
}
class Maintenance.RegisterSignature{
name
image
imageType
}
class Maintenance.RegisterStatus{
id
date
reasonNotCompletedId
}
class Maintenance.ResourceExpert{
id
name
}
class Maintenance.Resourcegroup{
id
description
}
class Maintenance.ServiceCaller{
id
name
phone
email
mobilePhone
}
class Maintenance.ServiceObject{
companyId
id
objectId
description
objectType
customer
owner
}
class Maintenance.ServiceObjectSearchResult{
id
description
contract
referenceType
referenceTypeId
referenceTypeDescription
street
houseNumber
houseNumberAddition
zipCode
city
country
realEstateObject
objectType
}
class Maintenance.ServiceRequestCreate{
originId
causeId
description
invoiceForId
subject
complaintId
serviceObjectId
dateCreated
typeId
solutionId
solutionDescription
externalCallId
urlSolution
serviceCaller
}
class Maintenance.ServiceTask{
companyId
callId
callStatusId
customer
serviceAddress
caller
id
actionCode
subject
description
status
performedBy
cause
blockTime
deadlineEndDate
durationMinutes
startDateTime
endDateTime
estimateAmount
extraInfo
settlementBy
paidBy
isDateLocked
project
projectGroup
callType
realizedDate
registrationDate
resourcegroup
resource
supplier
cancelIsPossible
rescheduleIsPossible
planningBundleId
reasonNotRealized
purchId
callDescription
tenantMemo
serviceObjectDescription
}
class Maintenance.ServiceTaskBundleRescheduleParm{
resourceId
planProcessId
tasks
}
class Maintenance.ServiceTaskCancel{
serviceTaskReasonNotRealizedId
}
class Maintenance.ServiceTaskCreate{
callId
actionCodeId
description
name
locationId
invoiceMethodId
reasonId
causeId
extraInformation
vendorAccountId
resourceGroupId
quantity
externalId
resourceId
performedById
scheduleExtern
planProposal
maintenanceType
fillJob
automaticPlanning
deadlineDate
}
class Maintenance.ServiceTaskHourLineDelete{
externalPlanId
planProcessId
hourLineId
}
class Maintenance.ServiceTaskHourLineSchedule{
externalPlanId
planProcessId
hourLineId
resourceId
startDateTime
endDateTime
durationMinutes
}
class Maintenance.ServiceTaskPlanItem{
taskId
startDateTime
endDateTime
}
class Maintenance.SettlementBy{
id
description
}
class Maintenance.Skill{
id
description
}
class Maintenance.StandardWork{
id
duration
performedBy
actionCode
objectType
skill
scheduleExtern
project
deadLine
maintenanceType
}
class Maintenance.StatusLog{
registrationDateTime
origin
responsible
status
statusDateTime
memo
}
class Maintenance.StatusLogResponsible{
id
name
referenceType
}
class Maintenance.StatusLogStatus{
id
description
}
class Market.AlternativeScenario{
id
description
}
class Market.BuyRent{
id
description
}
class Market.Component{
companyId
description
id
value
}
class Market.CoRegistrant{
referenceId
referenceType
birthDate
coContractor
id
companyId
displayName
income
registrationDateTime
type
}
class Market.CoRegistrantCreate{
referenceId
referenceType
birthDate
coContractor
registrationDateTime
typeId
}
class Market.CoRegistrantUpdate{
coContractor
typeId
}
class Market.CriteriaGroup{
criterias
description
filterGroups
id
}
class Market.CriteriaGroupCriteria{
description
id
matchingAttribute
matchingRulePassFail
matchingRuleSequence
valueEnd
valueStart
valueType
}
class Market.CriteriaGroupFilter{
description
id
}
class Market.CurrentHousing{
id
description
}
class Market.CustomerPaymentDetails{
bankAccount
customerId
customerPaymentMode
invoiceEmail
paymentTerm
}
class Market.CustomerPaymentMode{
description
id
mandateRequired
paymentType
}
class Market.Employee{
id
name
}
class Market.FocusGroup{
id
description
}
class Market.HouseHold{
id
description
}
class Market.MatchesStatus{
id
description
}
class Market.ObjectGroup{
description
id
}
class Market.Participation{
acceptationDate
address
companyId
contractId
contractSigningDateTime
id
matchesStatus
offerDate
offerValidTo
pointsTotal
preference
preliminaryContractDate
preliminaryRentFromDate
publicationId
reasonOfferSkip
reasonRefusal
reasonRejection
reasonReversedAcceptation
refusalDate
registrationId
rejectionDate
responseDateTime
reversedAcceptationDate
sequence
status
}
class Market.ParticipationAcceptationCreate{
acceptanceDate
contractFormId
invoiceFrom
occupiedFrom
signDateTime
validFrom
validTo
}
class Market.ParticipationCreate{
preference
publicationId
responseDateTime
}
class Market.ParticipationPreAcceptationCreate{
preAcceptationDate
}
class Market.ParticipationRefusal{
refusalDate
refusalReasonId
}
class Market.ParticipationStatus{
id
description
}
class Market.PaymentTerm{
id
description
}
class Market.PaymentType{
id
description
}
class Market.Publication{
additionalInfo
address
companyId
components
contractDate
dateAccepted
dateAvailable
dateObjectEmpty
eligibleRent
employee
endDateTime
freeForInternet
grossRent
id
minimumSellingPrice
netRent
nrOfParticipants
number
objectGroup
publicationText
realEstateObjectId
registrationType
alternativeScenario
sellingPrice
sequence
sortingType
startDateTime
status
type
}
class Market.PublicationSorting{
criteriaGroups
number
sequence
}
class Market.PublicationStatus{
id
description
}
class Market.PublicationSuitability{
criteriaGroups
number
sequence
}
class Market.PublicationText{
sequence
text
textBlock
textType
}
class Market.PublicationTextBlock{
id
description
}
class Market.PublicationTextType{
id
description
}
class Market.PublicationType{
id
description
}
class Market.PurposeGroup{
id
description
}
class Market.Reason{
id
description
}
class Market.ReasonType{
id
description
}
class Market.Registrant{
birthDate
companyId
displayName
income
referenceId
referenceType
}
class Market.RegistrantType{
id
description
}
class Market.Registration{
activationDate
buyRent
calculatedIncome
coRegistrants
companyId
currentHousing
currentRentSellingPrice
endDate
familySize
focusGroup
houseHold
id
numberOfChildren
occupancyDate
paymentDetails
pointsTotal
purposeGroup
registrant
registrationDateTime
registrationType
relocationReason
renewalDate
status
}
class Market.RegistrationCreate{
referenceId
referenceType
activationDate
birthDate
buyRentId
currentHousingId
currentRentSellingPrice
familySize
focusGroupId
houseHoldId
numberOfChildren
occupancyDate
purposeGroupId
registrationDateTime
registrationTypeId
relocationReasonId
statusId
}
class Market.RegistrationSatus{
id
description
}
class Market.RegistrationType{
id
description
}
class Market.RegistrationUpdate{
activationDate
buyRentId
currentHousingId
currentRentSellingPrice
familySize
focusGroupId
houseHoldId
numberOfChildren
occupancyDate
purposeGroupId
renewalDate
}
class Market.RegistrationUrgency{
companyId
grantDate
reason
requestDate
urgency
validUntilDate
}
class Market.SortingType{
id
description
}
class Market.Urgency{
id
description
}
class Organizations.Organization{
companyId
id
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
lastCheckDate
checkedBy
}
class Organizations.OrganizationCreate{
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
}
class Organizations.OrganizationUpdate{
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
}
class Persons.Gender{
id
description
}
class Persons.MaritalStatus{
id
description
}
class Persons.Person{
companyId
id
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
gender
maidenName
maritalStatus
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
lastCheckDate
checkedBy
}
class Persons.PersonCreate{
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
genderId
maidenName
maritalStatusId
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
}
class Persons.PersonUpdate{
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
genderId
maidenName
maritalStatusId
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
}
class PlanProposal.BlockTime{
startDateTime
endDateTime
description
}
class PlanProposal.PlanProposal{
id
deadlineExceeded
startDateTime
endDateTime
resource
blockTime
sequence
}
class PlanProposal.PlanProposalReschedule{
resourceId
resourceEmplId
startDateTime
endDateTime
planProcessId
}
class PlanProposal.Resource{
id
employeeId
name
}
class Projects.Project{
id
description
parentId
status
type
responsible
responsibleSales
responsibleFinancial
responsibleBackup
responsiblePrincipal
responsibleBudgetHolder
createdDate
estimatedStartDate
estimatedEndDate
constructionStartDate
constructionEndDate
postPonedEndDate
propertyObject
suppliers
}
class Projects.ProjectStatus{
id
description
}
class Projects.ProjectType{
id
description
}
class Projects.Responsible{
id
name
phoneWork
emailWork
}
class Projects.Supplier{
id
name
phone
email
phoneWork
emailWork
address
group
referenceId
referenceType
}
class PurchaseContracts.PurchaseContract{
id
externalReference
description
notification
amountExclTax
amountInclTax
vatReverse
purchaseType
status
startDate
endDate
alterationDate
cancelDate
closeDate
project
vendor
budgetHolder
buyer
administrator
workflowStatus
company
}
class PurchaseContracts.PurchaseContractKind{
id
description
}
class PurchaseContracts.PurchaseContractLine{
endDate
itemDescription
itemId
startDate
}
class PurchaseContracts.PurchaseContractSearchResult{
administrator
companyId
description
endDate
notes
objectId
purchaseContractId
purchaseContractKind
purchaseContractLines
purchaseContractType
purchaseContractexternalReference
realEstateObjectid
referenceId
referenceType
serviceObjectId
startDate
supplier
}
class PurchaseContracts.PurchaseContractType{
id
description
}
class PurchaseContracts.PurchaseStatus{
id
description
}
class PurchaseContracts.PurchaseType{
id
description
}
class PurchaseContracts.PurchaseVatReverse{
id
description
}
class PurchaseContracts.Vendor{
id
name
email
phone
mobilePhone
}
class RealEstateProperties.AdaptationType{
id
description
}
class RealEstateProperties.Block{
id
description
}
class RealEstateProperties.BuildingCategory{
id
description
}
class RealEstateProperties.BuildingType{
id
description
}
class RealEstateProperties.Category{
id
description
}
class RealEstateProperties.Cluster{
id
memo
name
objectId
type
ownershipType
category
builtYear
inExploitation
outExploitation
address
}
class RealEstateProperties.ClusterHierarchy{
id
name
parentClusterId
}
class RealEstateProperties.ClusterRelation{
id
referenceType
referenceId
roleId
roleType
roleDescription
contactType
contactId
validFrom
validTo
name
email
phone
mobile
}
class RealEstateProperties.ClusterType{
id
description
}
class RealEstateProperties.Color{
id
description
}
class RealEstateProperties.Compensation{
id
description
}
class RealEstateProperties.ContractSummary{
companyId
id
description
customer
}
class RealEstateProperties.CustomerSummary{
id
referenceType
referenceId
}
class RealEstateProperties.Destination{
id
description
}
class RealEstateProperties.District{
id
description
}
class RealEstateProperties.Equipment{
companyId
id
name
description
equipmentType
brand
standard
color
unit
compensation
maximumCompensation
validFrom
validTo
adaptationType
amount
quantity
remark
origin
supplierMaintainedBy
supplierPlacedBy
warrantyEndDate
}
class RealEstateProperties.EquipmentBrand{
id
description
}
class RealEstateProperties.EquipmentStandard{
id
description
}
class RealEstateProperties.EquipmentType{
id
description
}
class RealEstateProperties.FinancialComplex{
id
description
}
class RealEstateProperties.Floor{
id
description
}
class RealEstateProperties.Housing{
id
description
}
class RealEstateProperties.LandRegister{
coordinateX
coordinateY
registerIndexNumber
registerIndexSurface
registerIndexCharacter
registerPage
registerSection
}
class RealEstateProperties.Neighbourhood{
id
description
}
class RealEstateProperties.OperationalDestination{
id
description
}
class RealEstateProperties.OwnershipType{
id
description
}
class RealEstateProperties.PlotType{
id
description
}
class RealEstateProperties.PropertyEvaluation{
evaluationType
externalReference
startDate
value
year
}
class RealEstateProperties.PropertyEvaluationPostEntity{
evaluationTypeId
externalReference
startDate
value
year
}
class RealEstateProperties.PropertyEvaluationType{
id
description
}
class RealEstateProperties.PropertyObject{
referenceType
referenceId
description
}
class RealEstateProperties.PropertyOriginType{
id
description
}
class RealEstateProperties.PropertyScoring{
companyId
buildingId
scoringName
scoringPoints
scoringSystemId
propertyScoringRows
}
class RealEstateProperties.PropertyScoringRow{
sequence
description
pointAspects
pointGroups
value
unit
}
class RealEstateProperties.PropertySearchResult{
serviceObject
contract
preliminaryContract
office
referenceType
referenceTypeId
referenceTypeDescription
street
houseNumber
houseNumberAddition
zipCode
city
country
realEstateObject
}
class RealEstateProperties.Rayon{
id
description
}
class RealEstateProperties.RealEstateAvailableForRent{
availableForRentDate
}
class RealEstateProperties.RealEstateCategory{
id
description
}
class RealEstateProperties.RealEstateObjectCluster{
clusters
companyId
id
objectId
name
buildingCategory
buildingType
destination
district
cbsDistrict
type
financialComplex
technicalComplex
groundId
housing
neighbourhood
cbsNeighbourhood
plotType
ownershipType
builtYear
renovationYear
contractForms
maximumRentAmount
grossRent
netRent
eligibleRent
address
buildingId
realEstateType
operationalDestination
floor
rayon
landRegister
typeObjectSpace
targetRent
inExploitation
outExploitation
realEstateCategory
availableForRentDate
block
mutationId
segment
}
class RealEstateProperties.RealEstateObjectPrice{
companyID
eligibleRent
netRent
grossRent
rentComponents
}
class RealEstateProperties.RealEstateOffice{
referenceType
referenceId
displayName
}
class RealEstateProperties.RealEstateRelation{
id
referenceType
referenceId
roleId
roleType
roleDescription
contactType
contactId
validFrom
validTo
name
email
phone
mobile
}
class RealEstateProperties.RealEstateType{
id
description
}
class RealEstateProperties.RegisterIndexCharacter{
id
description
}
class RealEstateProperties.Segment{
id
description
}
class RealEstateProperties.ServiceObjectBasic{
id
companyId
description
objectType
}
class RealEstateProperties.Supplier{
email
emailWork
id
mobilePhone
name
phone
phoneWork
}
class RealEstateProperties.TechnicalComplex{
id
description
}
class RealEstateProperties.TypeObjectSpace{
id
description
}
class RentalDistribution.CandidateCreate{
id
registrant
coRegistrant
}
class RentalDistribution.CoRegistrantCreate{
id
birthdate
referenceType
referenceId
income
}
class RentalDistribution.RegistrantCreate{
id
birthdate
aggregateIncome
income
houseHoldId
purposeGroupId
familySize
numberOfChildren
bankAccount
referenceType
referenceId
}
class ShareWorX.Case{
id
name
title
status
responsiblePerson
responsibleUnit
}
class ShareWorX.Document{
id
documentNumber
title
date
fileVersions
responsiblePerson
responsibleUnit
direction
}
class ShareWorX.FileUploadMetadata{
fileName
checksum
indexes
}
class ShareWorX.FileVersion{
id
role
fileName
url
}
class Suppliers.PreInvoice{
amountHigh
amountLow
amountNoTax
autoIncasso
bankAccountId
bookDate
buyer
chamberOfCommerceNumber
deliveryDate
description
documentFileName
g_Account
g_Amount
invoiceAmount
invoiceBase64
invoiceDate
invoiceNumber
invoiceSource
specs
taxAmountHigh
taxAmountLow
taxDate
taxShifted
vatNumber
vendor
}
class Suppliers.PreInvoiceAddress{
address
city
name
zipCode
}
class Suppliers.Specification{
amount
articleId
chargedTo
id
lineNum
lineQuanity
location
typeId
unit
vatIndicator
}
class Suppliers.StatusLogParameters{
description
entityId
entityName
statusCode
statusDateTime
}
class Suppliers.SupplierGroup{
id
description
}
class TimeStampQueue.TimeStampQueue{
sourceCompanyId
sourceEntity
sourceEntityId
sourceAction
targetCompanyId
targetEntity
targetEntityId
targetAction
}
class WebUsers.WebUser{
id
referenceId
referenceType
}
class WebUsers.WebUserCreate{
login
password
referenceId
referenceType
}
class WebUsers.WebUserCredentials{
login
password
}
class WebUsers.WebUserCredentialsUpdate{
login
password
newPassword
}
class WebUsers.WebUserPasswordToken{
passwordToken
}
class WebUsers.WebUserPasswordTokenRequest{
login
}
class WebUsers.WebUserPasswordTokenReset{
login
passwordToken
newPassword
}
class Workflow.Category{
id
description
}
class Workflow.DelegateInput{
employeeId
comment
}
class Workflow.Dimension{
sectionName
sectionId
sequence
description
}
class Workflow.ExpensesSpecification{
id
project
amountDebet
amountCredit
taxItemGroup
taxGroup
transactionText
transactionDate
category
interCompany
}
class Workflow.InvoiceReason{
reasonCodeId
description
type
id
companyId
}
class Workflow.Item{
id
description
}
class Workflow.LedgerSpecification{
id
dimensions
amountDebet
amountCredit
taxItemGroup
taxGroup
transactionText
transactionDate
interCompanyId
}
class Workflow.ProcurementStatus{
id
description
}
class Workflow.Project{
id
name
projectGroup
}
class Workflow.ProjectCategory{
id
description
}
class Workflow.ProjectGroup{
id
description
}
class Workflow.PurchaseOrder{
id
name
contractType
status
deliveryDate
project
lines
assignedTo
booked
vendor
budgetHolder
budgetExceedingAmount
workflowStatus
company
errorMessage
procurementStatus
workflowDescription
toApproveOrSpecify
memo
orderer
type
}
class Workflow.PurchaseOrderContractType{
id
description
}
class Workflow.PurchaseOrderLine{
id
name
lineNumber
status
taxItemGroup
taxGroup
taxValue
taxAmount
specificationAmount
quantity
unitPrice
specificationUnitPrice
nettAmount
deliveryDate
remainDelivery
sellingPrice
specificationSellingPrice
project
packingSlip
unit
item
projectCategory
dimensions
booked
budgetAvailable
budgetExceedingAmount
budgetRealized
budgetReserved
budgetTotal
invoicedAmount
contractDate
workflowStatus
}
class Workflow.PurchaseOrderQuotation{
acceptedBy
amount
deliveryDate
productName
quantity
status
unit
}
class Workflow.PurchaseOrderTerm{
description
id
status
termAmount
termDate
}
class Workflow.PurchaseStatus{
id
description
}
class Workflow.ReasonType{
id
description
}
class Workflow.TaxGroup{
id
description
}
class Workflow.TaxItemGroup{
id
description
}
class Workflow.TrackingStatus{
id
description
}
class Workflow.TrackingType{
id
description
}
class Workflow.Vendor{
id
name
email
phone
mobilePhone
address
}
class Workflow.VendorInvoice{
id
company
voucher
vendor
amount
amountInclTax
taxAmount
transactionText
invoiceExternalId
dueDate
invoiceDate
transactionDate
invoiceErrors
assignedTo
specified
secondOpinion
status
toApproveOrSpecify
}
class Workflow.VendorInvoiceNote{
id
employee
action
comment
createDateTime
}
class Workflow.WorkflowInfo{
createdDateTime
message
comment
trackingStatus
trackingType
responsibleEmployee
}
class Workflow.WorkflowInput{
comment
}
class Workflow.WorkflowStatus{
id
description
}
@enduml