@startuml

class action {
    +action_kind : action_kind
    +addressId : string
    +stationId : string
    +planned : planned
    +expected : expected
    +finished : finished
    +tripId : string
    +couple : couple
    +decouple : couple
    +pickup : pickup
    +delivery : planned_transport_task
    +orderId : string
    +taskId : string
    +planned_task : planned_task
    +realised_load : realised_load
    +load : load
    +percentage_loaded : float
    +stop_number : integer
    +resources : resourcesWithChoice
    +cost : cost
    +revenue : float
    +realisation_kind : realisation_kind
    +extra_amounts : extra_amounts
    +id : NMTOKEN
}
action +-- planned
class planned {
    +distance : float
    +resources : resourcesWithChoice
}
planned *- planned
action +-- load
class load {
    +orderId : string[]
}
action +-- realisation_kind
class realisation_kind {
    +code : string
    +name : string
}
action +-- extra_amounts
class extra_amounts {
    +amount : amount[]
}
extra_amounts +-- amount
class amount {
    +unit_code : string
    +value : float
}
action +-- pickup
class pickup {
    +load_assignment : load_assignment
}
pickup *- planned_transport_task
class action_kind {
    +code : string
    +name : string
    +action_spec_code : string
    +action_spec_name : string
}
class action_kinds {
    +action_kind_code : string[]
}
class action_template {
    +action_kind_code : string
    +addressId : string
    +stationId : string
    +orderId : string
    +taskId : string
    +metaTask : metaTask
    +duration : integer
    +comment : string
    +fixateStartInstant : anyType
    +fixateFinishInstant : anyType
    +fixateStartDaysOffset : anyType
    +fixateStartTime : anyType
    +fixateFinishDaysOffset : anyType
    +fixateFinishTime : anyType
}
class action_templates {
    +action_template : action_template[]
}
class address {
    +id : string
    +code : string
    +name : string
    +address_kind : address_kind
    +address_kind_code : string
    +street_name : string
    +door_number : string
    +door_number_postfix : string
    +area_description : string
    +zipcode : string
    +city : string
    +state_name : string
    +country_code : string
    +givenX : decimal
    +givenY : decimal
    +timezone_code : string
    +phone : string
    +phone2 : string
    +fax : string
    +email : string
    +contact_person : string
    +contactAddress : contactAddress1
    +is_depot : boolean
    +active : boolean
    +temporary : boolean
    +pickup_duration : integer
    +delivery_duration : integer
    +processingDuration : integer
    +task_position : task_position
    +handling_times : handling_times
    +plan_region : plan_region
    +plan_region_code : string
    +capabilities : capabilities
    +calendar : calendar
    +allowed_action_kinds : action_kinds
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +contamination_matrix_code : string
    +location : location
    +time_slot_set : time_slot_set
    +turnaround_duration : integer
    +resource_kind_turnaround_durations : resource_kind_turnaround_durations
    +resource_turnaround_durations : resource_turnaround_durations
    +comment : string
    +divisions : divisions
    +udfields : udfields
}
address +-- location
class location {
    +id : anyType[]
    +coordinates : coordinates[]
    +method : location_method
    +precision : integer
}
address +-- time_slot_set
class time_slot_set {
    +capacity_unit_code : string
    +capacity_value : double
    +time_slots : time_slots
}
time_slot_set +-- time_slots
class time_slots {
    +time_slot : time_slot[]
}
time_slots +-- time_slot
class time_slot {
    +from_time : string
    +from_offset : short
    +till_time : string
    +till_offset : short
    +action_kind_code : string
    +productId : string
    +product_kind_code : string
    +sequence : short
    +dayofweekmask : short
    +capacity_value : double
    +capability_code : string
}
address +-- divisions
class divisions {
    +division : division[]
}
class address_activity_tariff {
    +addresses : addressesWithChoice
    +action_kinds : action_kinds
}
address_activity_tariff *- tariff
class address_kind {
    +code : string
    +name : string
    +calendar : calendar
    +ruleset : ruleset
    +handling_times : handling_times
    +allowed_action_kinds : action_kinds
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
}
class address_kinds {
    +address_kind_code : string[]
}
class address_with_optional_id {
    +id : string
    +code : string
    +name : string
    +address_kind : address_kind
    +address_kind_code : string
    +street_name : string
    +door_number : string
    +door_number_postfix : string
    +area_description : string
    +zipcode : string
    +city : string
    +state_name : string
    +country_code : string
    +givenX : decimal
    +givenY : decimal
    +timezone_code : string
    +phone : string
    +phone2 : string
    +fax : string
    +email : string
    +contact_person : string
    +contactAddress : contactAddress1
    +is_depot : boolean
    +active : boolean
    +temporary : boolean
    +pickup_duration : integer
    +delivery_duration : integer
    +processingDuration : integer
    +task_position : task_position
    +handling_times : handling_times
    +plan_region : plan_region
    +plan_region_code : string
    +capabilities : capabilities
    +calendar : calendar
    +allowed_action_kinds : action_kinds
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +contamination_matrix_code : string
    +location : location
    +time_slot_set : time_slot_set
    +turnaround_duration : integer
    +resource_kind_turnaround_durations : resource_kind_turnaround_durations
    +resource_turnaround_durations : resource_turnaround_durations
    +comment : string
    +divisions : divisions
    +udfields : udfields
}
address_with_optional_id +-- location
class location {
    +id : anyType[]
    +coordinates : coordinates[]
    +method : location_method
    +precision : integer
}
address_with_optional_id +-- time_slot_set
class time_slot_set {
    +capacity_unit_code : string
    +capacity_value : double
    +time_slots : time_slots
}
time_slot_set +-- time_slots
class time_slots {
    +time_slot : time_slot[]
}
time_slots +-- time_slot
class time_slot {
    +from_time : string
    +from_offset : short
    +till_time : string
    +till_offset : short
    +action_kind_code : string
    +productId : string
    +product_kind_code : string
    +sequence : short
    +dayofweekmask : short
    +capacity_value : double
    +capability_code : string
}
address_with_optional_id +-- divisions
class divisions {
    +division : division[]
}
class addresses {
    +addressId : string[]
}
class addressesWithChoice {
    +addressId : string[]
    +address : address[]
}
class agreement {
    +id : string
    +code : string
    +name : string
    +credit : anyType
    +debit : anyType
    +valid_from_date : string, date
    +valid_till_date : string, date
    +contact : contact
    +contactId : string
    +subcontractor : subcontractor
    +subcontractorId : string
    +company : company
    +tariffs : tariffs
}
class allowed_plan_regions {
    +allowed_plan_region : string[]
}
class amounts {
    +amount : amount[]
}
amounts +-- amount
class amount {
    +unit_code : string
    +unit : unit
    +value : double
}
class appointment_window {
    +from_instant : dateTime
    +till_instant : dateTime
    +appointment_kind : appointment_kind
    +appointment_kind_code : string
}
appointment_window +-- appointment_kind
class appointment_kind {
    +code : string
    +name : string
}
class area {
    +code : string
    +name : string
    +area_kind_code : string
    +area_parts : area_parts
}
class area_part {
    +include : anyType
    +exclude : anyType
    +world : anyType
    +country_code : string
    +state_name : string
    +order2_subdiv : string
    +municipality : string
    +city : string
    +zipcode : string
    +min_zipcode : string
    +max_zipcode : string
    +addressId : string
    +linked_area_code : string
}
class area_parts {
    +area_part : area_part[]
}
class areapolygon {
    +code : string
    +name : string
    +areapolygon_categories : areapolygon_categories
    +points : points
    +areapolygon_visualization : areapolygon_visualization
}
class areapolygon_categories {
    +areapolygon_category : category[]
}
class areapolygon_visualization {
    +outline : outline
    +fill : fill
}
areapolygon_visualization +-- outline
class outline {
    +color : string
    +transparency : nonNegativeInteger
    +width : nonNegativeInteger
}
areapolygon_visualization +-- fill
class fill {
    +color : string
    +transparency : nonNegativeInteger
}
class assignTo {
    +shift_templateId : string
    +rollout_instant : dateTime
}
enum availability {
    available = available
    unavailable = unavailable
    overtime = overtime
    open = open
    closed = closed
}
class calendar {
    +timezone_code : string
    +calendar_versions : calendar_versions
    +date_entries : date_entries
}
calendar +-- calendar_versions
class calendar_versions {
    +calendar_version : calendar_version[]
}
calendar_versions +-- calendar_version
class calendar_version {
    +from_date : string, date
    +till_date : string, date
    +nof_weeks : short
    +day_entry : day_entry[]
}
calendar_version +-- day_entry
class day_entry {
    +availability : availability
    +week_index : nonNegativeInteger
    +day_of_week : day_entry_day_of_week
    +from_time : string
    +till_time : string
}
enum calendar_tag {
    0 = 0
    1 = 1
    2 = 2
    3 = 3
}
class cancelCustomerTransportOrders {
    +order_status : order_status_2
    +customerTransportOrderId : string[]
}
class cancelOrders {
    +order_status : order_status_2
    +projectid : string
    +orderid : string[]
}
class capabilities {
    +capability : capability[]
}
capabilities +-- capability
class capability {
    +capability_code : anyType
    +code : string
    +name : string
    +available : boolean
    +required : boolean
    +forbidden : boolean
    +penalty : integer
    +strict : boolean
    +valid_from_date : string, date
    +valid_till_date : string, date
}
class capacities {
    +capacity : capacity[]
}
capacities +-- capacity
class capacity {
    +unit_code : string
    +unit : unit
    +value : double
    +pickup_quantity : positiveInteger
    +pickup_duration : positiveInteger
    +delivery_quantity : positiveInteger
    +delivery_duration : positiveInteger
}
class category {
    +code : string
    +name : string
}
class charter {
    +id : string
    +code : string
    +name : string
    +sum : float
    +currency_code : string
    +contactId : string
    +contact : contact
}
class company {
    +code : string
    +name : string
}
class compartments {
    +compartment : compartment[]
}
compartments +-- compartment
class compartment {
    +code : string
    +name : string
    +position : integer
    +maxTemperature : float
    +amounts : amounts
    +capacities : capacities
    +ruleset : ruleset
}
class completeTasks {
    +taskId : string[]
    +complete : boolean
}
class comtec {
    +deleteOrder : deleteid
    +task_order : task_order
    +version : comtec_version
}
enum comtec_version {
    2008 = 2008
    2010 = 2010
    2012 = 2012
    2014 = 2014
}
class configuration {
    +id : string
    +code : string
    +name : string
    +resourceId : string
    +singleOrderCompartments : boolean
    +compartments : compartments
    +capacities : capacities
}
configuration +-- capacities
class capacities {
    +capacity : capacity[]
}
capacities +-- capacity
class capacity {
    +unit_code : string
    +unit : unit
    +value : double
}
class contact {
    +id : string
    +code : string
    +name : string
    +contact_kind : contact_kind
    +company : company
    +initials : string
    +title : string
    +salutation : string
    +fileas_name : string
    +addressId : string
    +address : address
    +contactAddresses : contactAddresses
    +phone : string
    +phone2 : string
    +fax : string
    +email : string
    +website : string
    +bankaccount : string
    +birthdate : string, date
    +gender : gender
    +active : boolean
    +quality_level : string
    +allowed_cleaning_addresses : addresses
    +not_allowed_contacts : contacts
    +contamination_matrix_code : string
    +require_purchase_order_number : boolean
    +require_order_reference : boolean
    +ruleset : ruleset
    +comment : string
    +udfields : udfields
}
class contactAddress1 {
    +contactId : string
    +contactAddressKind : contactAddressKind[]
}
class contactAddress2 {
    +addressId : string
    +address : address
    +contactAddressKind : contactAddressKind[]
}
class contactAddressKind {
    +code : string
    +name : string
}
class contactAddresses {
    +contactAddress : contactAddress2[]
}
class contact_kind {
    +code : string
    +name : string
}
class contacts {
    +contactId : string[]
}
class container_order {
    +id : string
    +order_number : string
    +order_line_number : integer
    +order_template_number : string
    +priority : nonNegativeInteger
    +order_date : string, date
    +order_kind : order_kind
    +order_kind_code : string
    +operational : boolean
    +order_status : order_status_2
    +contact : contact
    +contactId : anyType
    +product : product
    +productId : anyType
    +product_description : string
    +amounts : task_order_amounts
    +dimension : dimension
    +allowed_depots : addresses
    +suborders : suborders
    +incoterm : string
    +sum : float
    +currency_code : string
    +company : company
    +companyId : string
    +department : department
    +department_code : string
    +project : project
    +projectId : string
    +reference : string
    +purchase_order_number : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +user : string
    +comment : string
    +parameterset_code : string
    +urgency : urgency
    +urgency_code : string
    +order_template : order_template
    +ordersets : ordersets
    +udfields : udfields
    +resourceId : string
    +resource : resource
    +ship_name : string
    +ship_owner : string
    +shipping_agent : string
    +destination : string
    +document_info : string
    +task : task[]
}
container_order +-- order_kind
class order_kind {
    +code : string
    +name : string
}
container_order +-- dimension
class dimension {
    +length : nonNegativeInteger
    +width : nonNegativeInteger
    +height : nonNegativeInteger
}
container_order +-- urgency
class urgency {
    +code : string
    +name : string
    +sortingkey : string
}
container_order +-- ordersets
class ordersets {
    +orderset_code : string[]
}
class contamination_matrix {
    +code : string
    +name : string
    +contamination_matrix_items : contamination_matrix_items
}
class contamination_matrix_item {
    +contamination_kind : contamination_matrix_item_contamination_kind
    +productId : anyType[]
    +product_kind_code : anyType[]
    +number_of_loads_contaminating : anyType
}
enum contamination_matrix_item_contamination_kind {
    nottogether = nottogether
    notafter = notafter
}
class contamination_matrix_items {
    +contamination_matrix_item : contamination_matrix_item[]
}
class coordinates {
    +x_coord : anyType
    +y_coord : anyType
}
class cost {
    +default_currency_code : string
    +costItem : costItem[]
}
cost +-- costItem
class costItem {
    +contactId : string
    +price_kind_code : string
    +sum : float
    +original_price : original_price
    +one_off : boolean
    +resourceId : resourceId
    +start_addressId : string
    +finish_addressId : string
    +from_instant : dateTime
    +till_instant : dateTime
}
costItem +-- original_price
class original_price {
    +currency_code : string
    +sum : float
}
class costkind {
    +code : string
    +name : string
    +unit_code : string
}
class costset {
    +code : string
    +name : string
    +costsetitems : costsetitems
}
costset +-- costsetitems
class costsetitems {
    +costsetitem : costsetitem[]
}
costsetitems +-- costsetitem
class costsetitem {
    +real_cost : decimal
    +plan_cost : decimal
    +unit_code : string
    +costkind : costkind
}
class countries {
    +country_code : string[]
}
class country_tariff {
    +countries : countries
}
country_tariff *- tariff
class couple {
    +resourceId : resourceId[]
    +resource : resource[]
    +driver : resource[]
    +charter : charter[]
}
couple +-- resourceId
class resourceId {
    +value : string
    +resource_tag : integer
    +type : string
}
enum cross_dock_task_window_strategy {
    no_windows = no_windows
    transport_windows = transport_windows
}
class customer_transport_order {
    +pickup_task : customer_transport_order_task
    +delivery_task : customer_transport_order_task
    +order_lines : order_lines
}
customer_transport_order *- customer_transport_order_details
customer_transport_order +-- order_lines
class order_lines {
    +order_line : customer_transport_order_line[]
}
class customer_transport_order_details {
    +id : string
    +order_number : string
    +priority : nonNegativeInteger
    +order_date : string, date
    +order_kind : order_kind
    +order_kind_code : string
    +operational : boolean
    +order_status : order_status_2
    +contact : contact
    +contactId : anyType
    +allowed_depots : addresses
    +company : company
    +companyId : string
    +department : department
    +department_code : string
    +reference : string
    +purchase_order_number : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +urgency : urgency
    +urgency_code : string
    +udfields : udfields
}
customer_transport_order_details +-- order_kind
class order_kind {
    +code : string
    +name : string
}
customer_transport_order_details +-- urgency
class urgency {
    +code : string
    +name : string
    +sortingkey : string
}
class customer_transport_order_line {
    +pickup_task : customer_transport_order_line_task
    +delivery_task : customer_transport_order_line_task
}
customer_transport_order_line *- customer_transport_order_line_details
class customer_transport_order_line_details {
    +id : string
    +order_line_number : integer
    +product : product
    +productId : anyType
    +product_description : string
    +amounts : transport_order_amounts
    +dimension : dimension
    +udfields : udfields
}
customer_transport_order_line_details +-- dimension
class dimension {
    +length : nonNegativeInteger
    +width : nonNegativeInteger
    +height : nonNegativeInteger
}
class customer_transport_order_line_task {
    +id : string
    +station : station_with_optional_id
    +stationId : string
    +duration_unit_of_measurement_code : duration_unit_of_measurement_code
    +duration : integer
    +complete : boolean
    +udfields : udfields
}
class customer_transport_order_task {
    +address : address_with_optional_id
    +addressId : string
    +start_window : datetime_window
    +finish_window : datetime_window
    +preferred_instant : dateTime
    +reference : string
    +comment : string
    +task_position : task_position
}
class date_entries {
    +date_entry : date_entry[]
}
date_entries +-- date_entry
class date_entry {
    +availability : availability
    +from_instant : dateTime
    +till_instant : dateTime
    +comment : string
}
class datetime_window {
    +from_instant : dateTime
    +till_instant : dateTime
}
enum day_entry_day_of_week {
     = 
    su = su
    mo = mo
    tu = tu
    we = we
    th = th
    fr = fr
    sa = sa
}
class deleteCode {
    +code : string[]
}
class deleteTrip {
}
deleteTrip *- deleteid
class deleteid {
    +id : string
}
class deleteids {
    +id : string[]
}
class department {
    +code : string
    +name : string
    +division : division
}
class departments {
    +department : department[]
    +department_code : string[]
}
class depot {
    +company : company
    +division : division
    +unit_conversions : unit_conversions
}
depot *- address
depot +-- unit_conversions
class unit_conversions {
    +unit_conversion : unit_conversion[]
}
unit_conversions +-- unit_conversion
class unit_conversion {
    +productId : string
    +from_unit_code : anyType
    +to_unit_code : anyType
    +factor : decimal
}
class dgclassifications {
    +dgclassification : dgclassification[]
}
dgclassifications +-- dgclassification
class dgclassification {
    +code : string
    +name : string
    +dgclassification_alternatives : dgclassification_alternatives
}
dgclassification +-- dgclassification_alternatives
class dgclassification_alternatives {
    +dgclassification_alternative : dgclassification_alternative[]
}
dgclassification_alternatives +-- dgclassification_alternative
class dgclassification_alternative {
    +dgclassification_code : string
}
class dghazard_class {
    +code : string
    +name : string
    +description : string
}
class dgregulation {
    +code : string
    +name : string
    +dgclassifications : dgclassifications
    +dgrequirements : dgrequirements
}
class dgrequirements {
    +dgrequirement : dgrequirement[]
}
dgrequirements +-- dgrequirement
class dgrequirement {
    +dgunnumber_code : string
    +dgclassification_code : string
}
class dgunnumber {
    +code : string
    +name : string
    +dghazard_class : dghazard_class
    +temperature_dependent : boolean
}
class division {
    +code : string
    +name : string
}
enum duration_unit_of_measurement_code {
    s = s
    min = min
    h = h
    d = d
}
class expected {
    +from_instant : dateTime
    +till_instant : dateTime
    +distance : float
}
class finished {
    +from_instant : dateTime
    +till_instant : dateTime
    +distance : float
    +odometer : integer
    +addressId : string
    +resources : resources
}
enum gender {
    M = M
    F = F
}
class handling_times {
    +handling_time : handling_time[]
}
handling_times +-- handling_time
class handling_time {
    +action_kind_code : string
    +unit_code : string
    +productId : string
    +product_handling_group_code : string
    +resource_kind_code : string
    +fixed : fixed
    +variable : variable
    +batch : batch
}
handling_time +-- fixed
class fixed {
    +duration : double
}
handling_time +-- variable
class variable {
    +duration : double
    +per_quantity : double
}
handling_time +-- batch
class batch {
    +duration : double
    +size : double
}
class human_resource {
    +contact : contact
}
human_resource *- resource
class load_assignment {
    +load_part : load_part[]
}
load_assignment +-- load_part
class load_part {
    +amounts : amounts
    +resourceId : string
    +resource_kind_code : string
    +configurationId : string
    +productId : string
    +compartments : compartments
}
enum location_method {
    undefined = undefined
    automatic = automatic
    byuser = byuser
    history = history
    centrezipcode = centrezipcode
}
class metaOrder {
    +searchCriteria : orderSearchCriteria
}
class metaTask {
    +searchCriteria : taskSearchCriteria
    +metaOrder : metaOrder
}
class orderSearchCriteria {
    +order_date : date
    +orderNumber : string
    +orderTemplateNumber : string
    +order_externalId : string
}
class orderStatus_1 {
    +orderId : string[]
    +cancelled : boolean
}
class order_info {
    +transports : transports
}
class order_status_2 {
    +code : string
    +name : string
    +status_kind : order_status_status_kind
}
enum order_status_status_kind {
    normal = normal
    no show = no show
    cancel = cancel
    inactive = inactive
}
class order_template {
    +from_date : string, date
    +till_date : string, date
    +active : boolean
    +recurrence : recurrence
    +visit_pattern : visit_pattern
}
order_template +-- visit_pattern
class visit_pattern {
    +code : string
    +name : string
    +number_of_visits : positiveInteger
}
class parameter {
    +code : string
    +value : anySimpleType
}
class parameter_tuple {
    +parameter : parameter[]
}
class parameter_tuples {
    +parameter_tuple : parameter_tuple[]
}
class parameterset {
    +code : string
    +name : string
    +parameter : parameter[]
}
class plan_region {
    +code : string
    +name : string
    +plan_group : plan_group
}
plan_region +-- plan_group
class plan_group {
    +code : string
    +name : string
}
class planned {
    +from_instant : dateTime
    +till_instant : dateTime
}
class planned_task {
    +taskId : string
    +orderId : string
    +task_kind : action_kind
    +order_info : order_info
}
class planned_transport_task {
    +orderId : string
    +taskId : string
    +order_info : order_info
    +realisedAmounts : amounts
}
class point {
    +x : decimal
    +y : decimal
}
class points {
    +point : point[]
}
class predefinedCalendar {
    +id : string
    +code : string
    +name : string
    +calendar_tag : calendar_tag
    +calendar : calendar
}
class price_categories {
    +price_category_code : string[]
    +price_category : price_category[]
}
class price_category {
    +code : string
    +name : string
}
class product {
    +id : string
    +code : string
    +name : string
    +product_kind : product_kind
    +active : boolean
    +dgunnumber_code : string
    +price_categories : price_categories
    +capabilities : capabilities
    +udfields : udfields
    +not_allowed_addresses : addresses
    +not_allowed_address_kinds : address_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +not_allowed_stations : stations
    +not_allowed_station_kinds : station_kinds
    +product_handling_group : product_handling_group
    +product_handling_group_code : string
    +unit_conversions : unit_conversions
}
product +-- product_kind
class product_kind {
    +code : string
    +name : string
}
product +-- unit_conversions
class unit_conversions {
    +unit_conversion : unit_conversion[]
}
unit_conversions +-- unit_conversion
class unit_conversion {
    +from_unit_code : anyType
    +to_unit_code : anyType
    +factor : decimal
}
product +-- product_handling_group
class product_handling_group {
    +code : string
    +name : string
}
class product_kinds {
    +product_kind_code : string[]
}
class products {
    +productId : string[]
}
class project {
    +id : string
    +code : string
    +name : string
    +rulesetCode : string
    +projectStatus : projectStatus
    +project_status_code : string
    +from_instant : dateTime
    +till_instant : dateTime
    +reference : string
    +comment : string
    +udfields : udfields
    +orders : orders
}
project +-- orders
class orders {
    +transport_order : transport_order[]
}
project +-- projectStatus
class projectStatus {
    +code : string
    +name : string
}
class realised_load {
    +load_part : load_part[]
}
realised_load +-- load_part
class load_part {
    +resourceId : string
    +compartment_code : string
    +productId : string
    +amounts : amounts
}
class recurrence {
    +active : boolean
    +recurrence_type : short
    +recurrence_dayofmonth : short
    +recurrence_dayofweekmask : short
    +recurrence_monthofyear : short
    +recurrence_interval : nonNegativeInteger
    +recurrence_instance : short
    +pattern_start_date : string, date
    +pattern_end_date : string, date
    +pattern_occurence : nonNegativeInteger
    +no_end_date : boolean
    +recurrence_times : recurrence_times
    +exception_pattern : exception_pattern
    +calendar : calendar
    +calendarId : string
}
recurrence +-- recurrence_times
class recurrence_times {
    +recurrence_time : recurrence_time[]
}
recurrence_times +-- recurrence_time
class recurrence_time {
    +recurrence_dayofweekmask : short
    +rollout_time : string
}
recurrence +-- exception_pattern
class exception_pattern {
    +exception : exception[]
}
exception_pattern +-- exception
class exception {
    +preferred_instant : dateTime
    +exception_instant : dateTime
    +pattern_date : string, date
    +rollout_date : string, date
    +rollout_times : rollout_times
}
exception +-- rollout_times
class rollout_times {
    +rollout_time : string[]
}
class resource {
    +id : string
    +code : string
    +name : string
    +resource_kind : resource_kind
    +resource_kind_code : string
    +resource_tag : integer
    +modality : string
    +resource_status : resource_status
    +resource_status_code : string
    +resource_amounts : resource_amounts
    +resource_categories : resource_categories
    +active : boolean
    +subcontractorId : string
    +division : division
    +division_code : string
    +address : address
    +addressId : string
    +comm_code : string
    +reference : string
    +comment : string
    +capacities : capacities
    +configurations : configurations
    +capabilities : capabilities
    +calendar : calendar
    +allowed_plan_regions : allowed_plan_regions
    +not_allowed_addresses : addresses
    +not_allowed_address_kinds : address_kinds
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +not_allowed_stations : stations
    +not_allowed_station_kinds : station_kinds
    +departments : departments
    +resource_classifications : resource_classifications
    +resource_contracts : resource_contracts
    +assignIssuesToUserGroupName : string
    +assignIssuesToUserName : string
    +action_durations : action_durations
    +cost_set_code : string
    +udfields : udfields
    +companyId : string
    +company : company
}
resource +-- resource_categories
class resource_categories {
    +resource_category : category[]
    +resource_category_code : string[]
}
resource +-- allowed_plan_regions
class allowed_plan_regions {
    +allowed_plan_region : anyType[]
}
resource +-- resource_classifications
class resource_classifications {
    +resource_classification : resource_classification[]
}
resource_classifications +-- resource_classification
class resource_classification {
    +dgregulation_code : string
    +dgclassification_code : string
}
resource +-- resource_contracts
class resource_contracts {
    +resource_contract : resource_contract[]
}
resource_contracts +-- resource_contract
class resource_contract {
    +contract_availability : double
    +min_availability : double
    +max_availability : double
    +valid_from_date : string, date
    +valid_till_date : string, date
    +rulesetCode : string
}
resource +-- action_durations
class action_durations {
    +action_duration : action_duration[]
}
action_durations +-- action_duration
class action_duration {
    +action_kind_code : anyType
    +duration_factor : anyType
}
resource +-- resource_status
class resource_status {
    +code : string
    +name : string
}
resource +-- capacities
class capacities {
    +capacity : capacity[]
}
capacities +-- capacity
class capacity {
    +unit_code : string
    +unit : unit
    +value : double
}
resource +-- configurations
class configurations {
    +configurationId : string[]
    +configuration : configuration[]
}
class resourceCalendar {
    +id : string
    +updateCalendar : updateCalendar
}
class resourceId {
    +value : string
    +resource_tag : string
    +type : string
}
class resource_amounts {
    +resource_amount : resource_amount[]
}
resource_amounts +-- resource_amount
class resource_amount {
    +unit_code : string
    +unit : unit
    +value : double
}
class resource_kind {
    +code : string
    +name : string
    +resource_tag : integer
    +modality : string
    +assignIssuesToUserGroupName : string
    +assignIssuesToUserName : string
    +resource_amounts : resource_amounts
    +resource_categories : resource_categories
    +capacities : capacities
    +configurations : configurations
    +capabilities : capabilities
    +calendar : calendar
    +allowed_plan_regions : allowed_plan_regions
    +not_allowed_addresses : addresses
    +not_allowed_address_kinds : address_kinds
    +not_allowed_resource_kinds : resource_kinds
    +not_allowed_stations : stations
    +not_allowed_station_kinds : station_kinds
    +resource_kind_regulations : resource_kind_regulations
    +cost_set_code : string
    +vehicleKindCode : string
    +emissionFactor : float
    +ruleset : ruleset
    +udfields : udfields
}
resource_kind +-- resource_categories
class resource_categories {
    +resource_category : category[]
    +resource_category_code : string[]
}
resource_kind +-- allowed_plan_regions
class allowed_plan_regions {
    +allowed_plan_region : anyType[]
}
resource_kind +-- resource_kind_regulations
class resource_kind_regulations {
    +resource_kind_regulation : resource_kind_regulation[]
}
resource_kind_regulations +-- resource_kind_regulation
class resource_kind_regulation {
    +dgregulation_code : anyType
}
resource_kind +-- capacities
class capacities {
    +capacity : capacity[]
}
capacities +-- capacity
class capacity {
    +unit_code : string
    +unit : unit
    +value : double
}
resource_kind +-- configurations
class configurations {
    +configurationId : string[]
    +configuration : configuration[]
}
class resource_kind_turnaround_durations {
    +resource_kind_turnaround_duration : resource_kind_turnaround_duration[]
}
resource_kind_turnaround_durations +-- resource_kind_turnaround_duration
class resource_kind_turnaround_duration {
    +resource_kind_code : string
    +duration : integer
}
class resource_kinds {
    +resource_kind_code : string[]
}
class resource_kindsWithChoice {
    +resource_kind_code : string[]
    +resource_kind : resource_kind[]
}
class resource_order {
    +id : string
    +order_number : string
    +order_line_number : integer
    +order_template_number : string
    +priority : nonNegativeInteger
    +order_date : string, date
    +order_kind : order_kind
    +order_kind_code : string
    +operational : boolean
    +order_status : order_status_2
    +contact : contact
    +contactId : anyType
    +product : product
    +productId : anyType
    +product_description : string
    +amounts : task_order_amounts
    +dimension : dimension
    +allowed_depots : addresses
    +suborders : suborders
    +incoterm : string
    +sum : float
    +currency_code : string
    +company : company
    +companyId : string
    +department : department
    +department_code : string
    +project : project
    +projectId : string
    +reference : string
    +purchase_order_number : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +user : string
    +comment : string
    +parameterset_code : string
    +urgency : urgency
    +urgency_code : string
    +order_template : order_template
    +ordersets : ordersets
    +udfields : udfields
    +resourceId : string
    +resource : resource
    +task : task[]
}
resource_order +-- order_kind
class order_kind {
    +code : string
    +name : string
}
resource_order +-- dimension
class dimension {
    +length : nonNegativeInteger
    +width : nonNegativeInteger
    +height : nonNegativeInteger
}
resource_order +-- urgency
class urgency {
    +code : string
    +name : string
    +sortingkey : string
}
resource_order +-- ordersets
class ordersets {
    +orderset_code : string[]
}
class resource_tariff {
    +resources : resourcesWithChoice
    +resource_kinds : resource_kindsWithChoice
}
resource_tariff *- tariff
class resource_turnaround_durations {
    +resource_turnaround_duration : resource_turnaround_duration[]
}
resource_turnaround_durations +-- resource_turnaround_duration
class resource_turnaround_duration {
    +resourceId : string
    +duration : integer
}
class resources {
    +resourceId : resourceId[]
}
class resourcesWithChoice {
    +resourceId : resourceId[]
    +resource : resource[]
}
class resourcesWithChoiceAndTemporary {
    +resourceId : string[]
    +resource : resource[]
    +temporaryResource : temporaryResource[]
}
class roadfeature_tariff {
    +roadfeatures : roadfeatures
}
roadfeature_tariff *- tariff
class roadfeatures {
    +roadfeature_code : string[]
}
enum route_part {
    main = main
    post = post
    pre = pre
}
class ruleset {
    +rulegroup : rulegroup[]
}
ruleset +-- rulegroup
class rulegroup {
    +code : string
    +from_date : string, date
    +till_date : string, date
}
class schedule_shift_template {
    +id : string
    +code : string
    +name : string
    +active : boolean
    +schedule_template_code : string
    +template_code : anyType
    +shift_kind : shift_kind
    +shift_kind_code : string
    +shift_tag : integer
    +volatile : boolean
    +department : department
    +department_code : string
    +start_time_window : time_window
    +finish_time_window : time_window
    +reference_time_window : time_window
    +planned : planned
    +start_addressId : string
    +start_stationId : string
    +finish_addressId : string
    +finish_stationId : string
    +resources : resourcesWithChoiceAndTemporary
    +subcontractorId : string
    +resource_kind_code : string
    +resource_kind : resource_kind
    +ruleset : ruleset
    +allowed_plan_regions : allowed_plan_regions
    +price_categories : price_categories
    +capabilities : capabilities
    +sum : float
    +currency_code : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +cost_set_code : string
    +udfields : udfields
    +modality : string
    +shift_templates : section_templates
    +action_templates : action_templates
}
class schedule_template {
    +code : string
    +name : string
    +start_date : string, date
    +start_instant : dateTime
    +number_of_days : positiveInteger
    +visit_schedule_code : string
    +comment : string
    +shift_templates : shift_templates[]
}
class section_template {
    +id : string
    +code : string
    +name : string
    +active : boolean
    +template_code : anyType
    +shift_kind : shift_kind
    +shift_kind_code : string
    +shift_tag : integer
    +volatile : boolean
    +department : department
    +department_code : string
    +start_time_window : time_window
    +finish_time_window : time_window
    +reference_time_window : time_window
    +planned : planned
    +start_addressId : string
    +start_stationId : string
    +finish_addressId : string
    +finish_stationId : string
    +resources : resourcesWithChoiceAndTemporary
    +subcontractorId : string
    +resource_kind_code : string
    +resource_kind : resource_kind
    +ruleset : ruleset
    +allowed_plan_regions : allowed_plan_regions
    +price_categories : price_categories
    +capabilities : capabilities
    +sum : float
    +currency_code : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +cost_set_code : string
    +udfields : udfields
    +modality : string
    +accompanyCombination : string
    +assignTo : assignTo
    +action_templates : action_templates
}
class section_templates {
    +shift_template : section_template[]
}
class shift {
    +id : string
    +code : string
    +name : string
    +template_code : string
    +shift_kind : shift_kind
    +shift_status : shift_status
    +shift_tag : integer
    +modality : string
    +accompanyCombination : string
    +volatile : boolean
    +operational : boolean
    +department : department
    +from_instant : dateTime
    +till_instant : anyType
    +start_window : datetime_window
    +finish_window : datetime_window
    +reference_start_instant : dateTime
    +reference_finish_instant : dateTime
    +start_addressId : string
    +start_stationId : string
    +finish_addressId : string
    +finish_stationId : string
    +resources : resourcesWithChoice
    +subcontractorId : string
    +resource_kind_code : string
    +resource_kind : resource_kind
    +ruleset : ruleset
    +allowed_plan_regions : allowed_plan_regions
    +shiftsets : shiftsets
    +price_categories : price_categories
    +capabilities : capabilities
    +sum : float
    +currency_code : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +cost_set_code : string
    +udfields : udfields
}
class shiftTemplateResources {
    +temporaryResource : temporaryResource[]
}
shiftTemplateResources *- resourcesWithChoice
class shift_kind {
    +code : string
    +name : string
    +shift_tag : integer
    +modality : string
}
class shift_status {
    +code : string
    +name : string
    +status_kind : shift_status_status_kind
}
enum shift_status_status_kind {
    normal = normal
    cancel = cancel
}
class shift_template {
    +id : string
    +code : string
    +name : string
    +active : boolean
    +template_code : anyType
    +shift_kind : shift_kind
    +shift_kind_code : string
    +shift_tag : integer
    +volatile : boolean
    +department : department
    +department_code : string
    +start_time_window : time_window
    +finish_time_window : time_window
    +reference_time_window : time_window
    +planned : planned
    +start_addressId : string
    +start_stationId : string
    +finish_addressId : string
    +finish_stationId : string
    +resources : resourcesWithChoiceAndTemporary
    +subcontractorId : string
    +resource_kind_code : string
    +resource_kind : resource_kind
    +ruleset : ruleset
    +allowed_plan_regions : allowed_plan_regions
    +price_categories : price_categories
    +capabilities : capabilities
    +sum : float
    +currency_code : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +cost_set_code : string
    +udfields : udfields
    +modality : string
    +accompanyCombination : string
    +combine_resources : boolean
    +recurrence : recurrence
    +shift_templates : section_templates
    +action_templates : action_templates
}
class shift_templates {
    +shift_template : shift_template[]
}
class shiftsets {
    +shiftset_code : string[]
}
class station {
    +id : string
    +code : string
    +name : string
    +station_kind : station_kind
    +parent_stationId : string
    +departments : departments
    +active : boolean
    +address : address
    +inheritAddress : boolean
    +addressId : string
    +depot : depot
    +temporary : boolean
    +pickup_duration : integer
    +delivery_duration : integer
    +processingDuration : integer
    +capabilities : capabilities
    +capacities : capacities
    +parameterset : parameterset
    +handling_times : handling_times
    +calendar : calendar
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +storage : storage
    +comment : string
    +udfields : udfields
}
station +-- station_kind
class station_kind {
    +code : string
    +name : string
}
class station_kinds {
    +station_kind_code : string[]
}
class station_with_optional_id {
    +id : string
    +code : string
    +name : string
    +station_kind : station_kind
    +parent_stationId : string
    +departments : departments
    +active : boolean
    +address : address
    +inheritAddress : boolean
    +addressId : string
    +depot : depot
    +temporary : boolean
    +pickup_duration : integer
    +delivery_duration : integer
    +processingDuration : integer
    +capabilities : capabilities
    +capacities : capacities
    +parameterset : parameterset
    +handling_times : handling_times
    +calendar : calendar
    +not_allowed_products : products
    +not_allowed_product_kinds : product_kinds
    +not_allowed_resources : resources
    +not_allowed_resource_kinds : resource_kinds
    +storage : storage
    +comment : string
    +udfields : udfields
}
station_with_optional_id +-- station_kind
class station_kind {
    +code : string
    +name : string
}
class stations {
    +stationId : string[]
}
class stock_measurement {
    +ID : string
    +storageId : string
    +stationId : string
    +productId : string[]
    +unit_code : string[]
    +alt_unit_code : anyType
    +addressId : string
    +measurement_instant : dateTime
    +stock_measurement_kind : stock_measurement_kind
    +value : decimal
    +delta : boolean
    +sequence : integer
    +relevant : boolean
    +reference : string
}
stock_measurement +-- stock_measurement_kind
class stock_measurement_kind {
    +code : anyType
    +name : anyType
}
class storage {
    +storage_kind : storage_kind
    +product : product
    +productId : string
    +capacity : decimal
    +unit_of_measurement_code : string
    +min_stock : decimal
    +min_stock_factor : decimal
    +max_stock : decimal
    +max_stock_factor : decimal
    +storage_dimension : storage_dimension
}
class storage_dimension {
    +code : string
    +name : string
    +sphere : sphere
    +horizontal_cylinder : horizontal_cylinder
    +vertical_cylinder : vertical_cylinder
}
storage_dimension +-- sphere
class sphere {
    +unit_of_measurement_code : string
    +diameter : decimal
}
storage_dimension +-- horizontal_cylinder
class horizontal_cylinder {
    +unit_of_measurement_code : string
    +diameter : decimal
    +length : decimal
}
storage_dimension +-- vertical_cylinder
class vertical_cylinder {
    +unit_of_measurement_code : string
    +diameter : decimal
    +height : decimal
}
class storage_kind {
    +code : string
    +name : string
    +quantity_code : anyType
    +min_stock_factor : decimal
    +max_stock_factor : decimal
}
class subcontractor {
    +parameterset : parameterset
    +use_exchange : boolean
}
subcontractor *- contact
class subcontractors {
    +subcontractorId : anyType[]
}
class suborder {
    +code : string
    +product : product
    +productId : string
    +suborder_description : string
    +amounts : amounts
    +udfields : udfields
}
class suborders {
    +suborder : suborder[]
}
class tariff {
    +id : string
    +code : string
    +name : string
    +valid_from_date : string, date
    +valid_till_date : string, date
    +price_kind_code : string
    +active : boolean
    +tariff_items : tariff_items
}
class tariff_item {
    +name : string
    +tariff_item_spec : string
    +currency_code : string
    +valid_from_date : string, date
    +valid_till_date : string, date
    +level : short
    +unit_code : string
    +parameter_tuples : parameter_tuples
}
class tariff_items {
    +tariff_item : tariff_item[]
}
class tariffs {
    +address_activity_tariff : address_activity_tariff[]
    +country_tariff : country_tariff[]
    +resource_tariff : resource_tariff[]
    +roadfeature_tariff : roadfeature_tariff[]
    +tariffId : string[]
}
class task {
    +id : string
    +orderId : string
    +task_kind : task_kind
    +task_kind_code : anyType
    +address : address_with_optional_id
    +addressId : string
    +station : station_with_optional_id
    +stationId : string
    +sequence : positiveInteger
    +task_window : task_window
    +start_window : datetime_window
    +finish_window : datetime_window
    +appointment_window : appointment_window
    +duration_unit_of_measurement_code : duration_unit_of_measurement_code
    +duration : integer
    +calendar : calendar
    +preferred_instant : dateTime
    +preferred_resources : resources
    +allowed_subcontractors : subcontractors
    +capabilities : capabilities
    +reference : string
    +task_cluster : task_cluster
    +task_clusters : task_clusters
    +predecessor_tasks : taskReferences
    +successor_tasks : taskReferences
    +task_position : task_position
    +comment : string
    +amounts : amounts
    +udfields : udfields
}
task +-- task_clusters
class task_clusters {
    +task_cluster : task_cluster[]
}
class taskReferences {
    +taskId : string[]
    +transport_task : transport_task[]
    +minDuration : positiveInteger[]
    +maxDuration : positiveInteger[]
    +earliestDaysOffset : positiveInteger[]
    +latestDaysOffset : positiveInteger[]
    +workDaysOnly : boolean[]
}
taskReferences +-- transport_task
class transport_task {
    +orderId : string
    +task_spec_code : transport_task_task_spec_code
}
class taskSearchCriteria {
    +index : integer
}
class task_cluster {
    +code : string
    +name : string
    +type : task_cluster_type
}
enum task_cluster_type {
    addressMatch = addressMatch
    executionShift = executionShift
    maxDurationBetween = maxDurationBetween
    resourceMatch = resourceMatch
}
class task_kind {
    +code : string
    +name : string
    +task_spec_code : string
    +task_spec_name : string
}
class task_order {
    +id : string
    +order_number : string
    +order_line_number : integer
    +order_template_number : string
    +priority : nonNegativeInteger
    +order_date : string, date
    +order_kind : order_kind
    +order_kind_code : string
    +operational : boolean
    +order_status : order_status_2
    +contact : contact
    +contactId : anyType
    +product : product
    +productId : anyType
    +product_description : string
    +amounts : task_order_amounts
    +dimension : dimension
    +allowed_depots : addresses
    +suborders : suborders
    +incoterm : string
    +sum : float
    +currency_code : string
    +company : company
    +companyId : string
    +department : department
    +department_code : string
    +project : project
    +projectId : string
    +reference : string
    +purchase_order_number : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +user : string
    +comment : string
    +parameterset_code : string
    +urgency : urgency
    +urgency_code : string
    +order_template : order_template
    +ordersets : ordersets
    +udfields : udfields
    +task : task[]
}
task_order +-- order_kind
class order_kind {
    +code : string
    +name : string
}
task_order +-- dimension
class dimension {
    +length : nonNegativeInteger
    +width : nonNegativeInteger
    +height : nonNegativeInteger
}
task_order +-- urgency
class urgency {
    +code : string
    +name : string
    +sortingkey : string
}
task_order +-- ordersets
class ordersets {
    +orderset_code : string[]
}
class task_order_amounts {
    +amount : amount[]
}
task_order_amounts +-- amount
class amount {
    +unit_code : string
    +value : double
    +realisedPickupValue : double
    +realisedDeliverValue : double
    +realised_value : double
    +specified_amount : boolean
}
enum task_position {
    anywhere = anywhere
    firstintrip = firstintrip
    lastintrip = lastintrip
    firstinsection = firstinsection
    lastinsection = lastinsection
    notlastintrip = notlastintrip
    notlastinsection = notlastinsection
    notfirstintrip = notfirstintrip
    notfirstinsection = notfirstinsection
}
class task_window {
    +from_instant : dateTime
    +till_instant : dateTime
}
class tax {
    +code : string
    +name : string
    +percentage : float
    +kind : tax_kind
}
enum tax_kind {
    VAT = VAT
    sales tax = sales tax
}
class temporaryResource {
    +id : string
    +templateId : string
}
class time_window {
    +from_time : string
    +from_offset : short
    +till_time : string
    +till_offset : short
    +from_instant : dateTime
    +till_instant : dateTime
}
class transport_details {
    +department : department
    +department_code : string
    +plan_region : plan_region
    +plan_region_code : string
    +route_part : route_part
    +udfields : udfields
}
class transport_order {
    +id : string
    +order_number : string
    +order_line_number : integer
    +order_template_number : string
    +priority : nonNegativeInteger
    +order_date : string, date
    +order_kind : order_kind
    +order_kind_code : string
    +operational : boolean
    +order_status : order_status_2
    +contact : contact
    +contactId : anyType
    +product : product
    +productId : anyType
    +product_description : string
    +amounts : transport_order_amounts
    +dimension : dimension
    +allowed_depots : addresses
    +suborders : suborders
    +incoterm : string
    +sum : float
    +currency_code : string
    +company : company
    +companyId : string
    +department : department
    +department_code : string
    +project : project
    +projectId : string
    +reference : string
    +purchase_order_number : string
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +user : string
    +comment : string
    +parameterset_code : string
    +urgency : urgency
    +urgency_code : string
    +order_template : order_template
    +ordersets : ordersets
    +udfields : udfields
    +pickup_task : transport_task
    +delivery_task : transport_task
    +transport_details : transport_details
    +plan_region : plan_region
    +cross_docks : cross_docks
}
transport_order +-- order_kind
class order_kind {
    +code : string
    +name : string
}
transport_order +-- dimension
class dimension {
    +length : nonNegativeInteger
    +width : nonNegativeInteger
    +height : nonNegativeInteger
}
transport_order +-- urgency
class urgency {
    +code : string
    +name : string
    +sortingkey : string
}
transport_order +-- ordersets
class ordersets {
    +orderset_code : string[]
}
transport_order +-- cross_docks
class cross_docks {
    +transport_details : transport_details[]
    +cross_dock : cross_dock[]
}
cross_docks +-- cross_dock
class cross_dock {
    +addressId : string
    +task_window_strategy : cross_dock_task_window_strategy
}
class transport_order_amounts {
    +amount : amount[]
}
transport_order_amounts +-- amount
class amount {
    +unit_code : string
    +value : double
    +minimum_value : anyType
    +maximum_value : anyType
    +realisedPickupValue : double
    +realisedDeliverValue : double
    +realised_value : double
    +specified_amount : boolean
}
class transport_task {
    +address : address_with_optional_id
    +addressId : string
    +station : station_with_optional_id
    +stationId : string
    +task_window : task_window
    +start_window : datetime_window
    +finish_window : datetime_window
    +appointment_window : appointment_window
    +duration_unit_of_measurement_code : duration_unit_of_measurement_code
    +duration : integer
    +minTemperature : float
    +maxTemperature : float
    +realisedTemperature : float
    +calendar : calendar
    +preferred_instant : dateTime
    +preferred_resources : resources
    +capabilities : capabilities
    +reference : string
    +task_cluster : task_cluster
    +task_clusters : task_clusters
    +predecessor_tasks : taskReferences
    +successor_tasks : taskReferences
    +task_position : task_position
    +comment : string
    +udfields : udfields
}
transport_task +-- task_clusters
class task_clusters {
    +task_cluster : task_cluster[]
}
enum transport_task_task_spec_code {
    pickup = pickup
    deliver = deliver
}
class transports {
    +transport : transport[]
}
transports +-- transport
class transport {
    +pickup_taskId : string
    +deliver_taskId : string
    +pickup_addressId : string
    +pickup_stationId : string
    +delivery_addressId : string
    +delivery_stationId : string
    +route_part : route_part
    +department : department
}
class trip {
    +id : string
    +code : string
    +name : string
    +trip_status : trip_trip_status
    +template_code : string
    +trip_group : trip_group
    +department : department
    +from_instant : dateTime
    +till_instant : dateTime
    +start_window : datetime_window
    +finish_window : datetime_window
    +reference_start_instant : dateTime
    +reference_finish_instant : dateTime
    +price_categories : price_categories
    +capabilities : capabilities
    +orderId : string
    +cost : cost
    +allowForProposalPlan : boolean
    +allowForBatchPlan : boolean
    +comment : string
    +joined_resource_shift : joined_resource_shift
    +joined_tripId : string
    +action : action[]
    +section : trip[]
    +udfields : udfields
    +timestamp : dateTime
    +username : string
}
trip +-- trip_group
class trip_group {
    +code : string
    +name : string
}
trip +-- price_categories
class price_categories {
    +price_category_code : anyType[]
}
trip +-- joined_resource_shift
class joined_resource_shift {
    +id : string
    +resources : resourcesWithChoice
}
enum trip_trip_status {
    unplanned = unplanned
    planned = planned
    complete = complete
}
class udfields {
    +udfield : udfield[]
}
udfields +-- udfield
class udfield {
    +name : string
    +content : anyType[]
}
class unit {
    +code : string
    +name : string
}
class updateCalendar {
    +from_instant : dateTime
    +till_instant : dateTime
    +date_entries : date_entries
}
class user {
    +id : string
    +userName : string
    +userFullName : string
    +userDescription : string
    +accountEnabled : boolean
    +authenticationProvider : user_authenticationProvider
    +userGroups : userGroups
}
user +-- userGroups
class userGroups {
    +userGroupName : string[]
}
enum user_authenticationProvider {
    ComtecAuthenticationProvider = ComtecAuthenticationProvider
    LdapAuthenticationProvider = LdapAuthenticationProvider
    DisabledAuthenticationProvider = DisabledAuthenticationProvider
}
class visit_schedule {
    +code : string
    +name : string
    +start_date : string, date
    +number_of_days : positiveInteger
    +valid_from_date : string, date
    +valid_till_date : string, date
    +comment : string
    +visits : visits
}
visit_schedule +-- visits
class visits {
    +visit : visit[]
}
visits +-- visit
class visit {
    +orderId : string
    +date : string, date
    +amounts : amounts
}

@enduml
