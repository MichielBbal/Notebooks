<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2016 (x64) (http://www.altova.com) by Helpdesk (Ortec) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>
      comtec xsd for ORTEC Logistic Solutions
      version 2014
      $DateTime: 2018/04/11 15:53:33 $
      $Change: 1076027 $
      Copyright 2002-2014 Ortec bv
		</xs:documentation>
	</xs:annotation>
	<xs:element name="comtec">
		<xs:complexType>
			<xs:choice>
				<xs:element name="deleteOrder" type="deleteid"/>
				<xs:element name="task_order" type="task_order"/>
			</xs:choice>
			<xs:attribute name="version" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="2008"/>
						<xs:enumeration value="2010"/>
						<xs:enumeration value="2012"/>
						<xs:enumeration value="2014"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="active">
		<xs:annotation>
			<xs:documentation>default is true</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	<xs:simpleType name="area_description">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="availability">
		<xs:restriction base="xs:string">
			<xs:maxLength value="11"/>
			<xs:enumeration value="available"/>
			<xs:enumeration value="unavailable"/>
			<xs:enumeration value="overtime"/>
			<xs:enumeration value="open"/>
			<xs:enumeration value="closed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="available">
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	<xs:simpleType name="bankaccount">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="calendar_tag">
		<xs:annotation>
			<xs:documentation>0 = 'address'; 1 = 'resource'; 2 = 'recurrence'; 3 = 'public holidays'.
The calendar_tag is only parsed on insert of a calendar.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="3"/>
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="city">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="code">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="color">
		<xs:annotation>
			<xs:documentation>color in RBG</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="#([A-Fa-f]|[0-9]){6}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="combine_resources">
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	<xs:simpleType name="comm_code">
		<xs:restriction base="xs:string">
			<xs:maxLength value="60"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="comment">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="country_code">
		<xs:annotation>
			<xs:documentation>ISO country code</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="currency_code">
		<xs:annotation>
			<xs:documentation>ISO currency codes</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="date">
		<xs:annotation>
			<xs:documentation>ISO date format: YYYY-MM-DD</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="xs:date">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="0"/>
					<xs:maxLength value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="datetime">
		<xs:annotation>
			<xs:documentation>ISO Date time format with (optional) time zone designator: YYYY-MM-DDTHH:MM:SSÂ±hh:mm.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:dateTime"/>
	</xs:simpleType>
	<xs:simpleType name="duration">
		<xs:annotation>
			<xs:documentation>duration in minutes</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:simpleType name="duration_unit_of_measurement_code">
		<xs:annotation>
			<xs:documentation>s (seconds), min (minutes), h (hours) or d (days)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="s"/>
			<xs:enumeration value="min"/>
			<xs:enumeration value="h"/>
			<xs:enumeration value="d"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="emissionFactor">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:simpleType name="gender">
		<xs:restriction base="xs:string">
			<xs:length value="1"/>
			<xs:enumeration value="M"/>
			<xs:enumeration value="F"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="id">
		<xs:annotation>
			<xs:documentation>unique identifier of the entity</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="name">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phone">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="resource_tag">
		<xs:annotation>
			<xs:documentation>tag which defines the role of the resource in the planning.
0 = trailer/chassis; 1 = human resource; 2 = vehicle (except trailers etc.); 3 = hired combination (formerly charter); 4 = container; 5 = equipment; 6 = assistant; 7 = tool; 8 = independent resource</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="route_part">
		<xs:restriction base="xs:string">
			<xs:enumeration value="main"/>
			<xs:enumeration value="post"/>
			<xs:enumeration value="pre"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="shift_tag">
		<xs:annotation>
			<xs:documentation>1 = execution; 2 = control; 3 = section; 4 = independent shift; 5 = resource shift</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="1"/>
			<xs:maxInclusive value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="task_position">
		<xs:restriction base="xs:string">
			<xs:enumeration value="anywhere"/>
			<xs:enumeration value="firstintrip"/>
			<xs:enumeration value="lastintrip"/>
			<xs:enumeration value="firstinsection"/>
			<xs:enumeration value="lastinsection"/>
			<xs:enumeration value="notlastintrip"/>
			<xs:enumeration value="notlastinsection"/>
			<xs:enumeration value="notfirstintrip"/>
			<xs:enumeration value="notfirstinsection"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="time">
		<xs:annotation>
			<xs:documentation>ISO time format: HH:MM:SS (24 hours format). Acceptable range is 00:00:00 to 23:59:59. The value 24:00:00 is only allowed where explicitly specified.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="xs:time">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="24:00:00"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="timezone_code">
		<xs:annotation>
			<xs:documentation>The Windows time zone identifier as provided in .NET as the TimeZoneInfo.Id property.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="x-coordinate">
		<xs:annotation>
			<xs:documentation>external given x coordinate according to WGS84 geographical
.
value between -180 and 180, required in case no street, city, zip code available.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="-180"/>
			<xs:maxInclusive value="180"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="y-coordinate">
		<xs:annotation>
			<xs:documentation>external given y coordinate according to WGS84 geographical.
value between -90 and 90, required in case no street, city, zip code available
.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="-90"/>
			<xs:maxInclusive value="90"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="action">
		<xs:sequence>
			<xs:element name="action_kind" type="action_kind"/>
			<xs:element name="addressId" type="id" minOccurs="0"/>
			<xs:element name="stationId" type="id" minOccurs="0"/>
			<xs:element name="planned" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="planned">
							<xs:sequence>
								<xs:element name="distance" type="xs:float" minOccurs="0">
									<xs:annotation>
										<xs:documentation>in km</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="resources" type="resourcesWithChoice" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:choice>
				<xs:element name="expected" type="expected"/>
				<xs:element name="finished" type="finished"/>
			</xs:choice>
			<xs:element name="tripId" type="id" minOccurs="0"/>
			<xs:element name="couple" type="couple" minOccurs="0"/>
			<xs:element name="decouple" type="couple" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="pickup">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="planned_transport_task">
								<xs:sequence minOccurs="0">
									<xs:element name="load_assignment" type="load_assignment" minOccurs="0"/>
								</xs:sequence>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="delivery" type="planned_transport_task"/>
				<xs:sequence>
					<xs:element name="orderId" type="id"/>
					<xs:element name="taskId" type="id"/>
				</xs:sequence>
				<xs:element name="planned_task" type="planned_task"/>
				<xs:element name="realised_load" type="realised_load"/>
			</xs:choice>
			<xs:element name="load" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="orderId" type="id" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="percentage_loaded" type="xs:float" minOccurs="0"/>
			<xs:element name="stop_number" type="xs:integer" minOccurs="0"/>
			<xs:element name="resources" type="resourcesWithChoice" minOccurs="0"/>
			<xs:element name="cost" type="cost" minOccurs="0"/>
			<xs:element name="revenue" type="xs:float" minOccurs="0"/>
			<xs:element name="realisation_kind" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="extra_amounts" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="amount" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="unit_code" type="code"/>
									<xs:element name="value" type="xs:float"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:NMTOKEN" use="required"/>
	</xs:complexType>
	<xs:complexType name="action_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="action_spec_code" type="code"/>
			<xs:element name="action_spec_name" type="name" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="action_kinds">
		<xs:sequence>
			<xs:element name="action_kind_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="action_template">
		<xs:sequence>
			<xs:element name="action_kind_code" type="code"/>
			<xs:element name="addressId" type="id" minOccurs="0"/>
			<xs:element name="stationId" type="id" minOccurs="0"/>
			<xs:element name="orderId" type="id" minOccurs="0"/>
			<xs:element name="taskId" type="id" minOccurs="0"/>
			<xs:element name="metaTask" type="metaTask" minOccurs="0"/>
			<xs:element name="duration" type="duration" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="fixateStartInstant" minOccurs="0"/>
					<xs:element name="fixateFinishInstant" minOccurs="0"/>
				</xs:sequence>
				<xs:sequence>
					<xs:element name="fixateStartDaysOffset" minOccurs="0"/>
					<xs:element name="fixateStartTime" minOccurs="0"/>
					<xs:element name="fixateFinishDaysOffset" minOccurs="0"/>
					<xs:element name="fixateFinishTime" minOccurs="0"/>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="action_templates">
		<xs:sequence>
			<xs:element name="action_template" type="action_template" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="address">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:group ref="address_base"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="address_with_optional_id">
		<xs:sequence>
			<xs:element name="id" type="id" minOccurs="0"/>
			<xs:group ref="address_base"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="address_base">
		<xs:sequence>
			<xs:element name="code" type="code" minOccurs="0"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:choice>
				<xs:element name="address_kind" type="address_kind"/>
				<xs:element name="address_kind_code" type="code"/>
			</xs:choice>
			<xs:choice>
				<xs:sequence>
					<xs:element name="street_name">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="80"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="door_number">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="20"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="door_number_postfix" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="20"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="area_description" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="80"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="zipcode">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="10"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="city">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="60"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="state_name" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="60"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="country_code" type="country_code"/>
					<xs:element name="givenX" type="x-coordinate" minOccurs="0"/>
					<xs:element name="givenY" type="y-coordinate" minOccurs="0"/>
				</xs:sequence>
			<!-- 	<xs:sequence>
					<xs:element name="country_code" type="country_code" minOccurs="0"/>
					<xs:element name="givenX" type="x-coordinate" minOccurs="0"/>
					<xs:element name="givenY" type="y-coordinate" minOccurs="0"/>
				</xs:sequence> -->
			</xs:choice>
			<xs:element name="timezone_code" type="timezone_code" minOccurs="0"/>
			<xs:element name="phone" type="phone" minOccurs="0"/>
			<xs:element name="phone2" type="phone" minOccurs="0"/>
			<xs:element name="fax" type="phone" minOccurs="0"/>
			<xs:element name="email" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="60"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="contact_person" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="60"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="contactAddress" type="contactAddress1" minOccurs="0"/>
			<xs:element name="is_depot" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates if the address is a depot</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:element name="temporary" type="xs:boolean" minOccurs="0"/>
			<xs:element name="pickup_duration" type="duration" minOccurs="0"/>
			<xs:element name="delivery_duration" type="duration" minOccurs="0"/>
			<xs:element name="processingDuration" type="duration" minOccurs="0"/>
			<xs:element name="task_position" type="task_position" minOccurs="0"/>
			<xs:element name="handling_times" type="handling_times" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="plan_region" type="plan_region"/>
				<xs:element name="plan_region_code" type="code"/>
			</xs:choice>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="allowed_action_kinds" type="action_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which actions are allowed on the address. The list is not used for restrictions but to filter the list of addresses when planning an action</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_products" type="products" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which products are not allowed on the address</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_product_kinds" type="product_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which product kinds are not allowed on the addresses</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resources" type="resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resources can/may not visit the address</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resource kinds can/may not visit the address</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contamination_matrix_code" type="code" minOccurs="0"/>
			<xs:element name="location" minOccurs="0">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:sequence>
								<xs:element name="id">
									<xs:annotation>
										<xs:documentation>id of location on the MAP</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="coordinates" type="coordinates" minOccurs="0"/>
							</xs:sequence>
							<xs:sequence>
								<xs:element name="coordinates" type="coordinates"/>
								<xs:element name="id" minOccurs="0">
									<xs:annotation>
										<xs:documentation>id of location on the MAP</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:choice>
						<xs:element name="method" minOccurs="0">
							<xs:annotation>
								<xs:documentation>method used to localize the address</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="undefined"/>
									<xs:enumeration value="automatic"/>
									<xs:enumeration value="byuser"/>
									<xs:enumeration value="history"/>
									<xs:enumeration value="centrezipcode"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="precision" minOccurs="0">
							<xs:annotation>
								<xs:documentation>precision of the match of the location found for this address</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="time_slot_set" minOccurs="0">
				<xs:annotation>
					<xs:documentation>import only</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="capacity_unit_code" type="code"/>
						<xs:element name="capacity_value" type="xs:double"/>
						<xs:element name="time_slots">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="time_slot" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="from_time" type="time"/>
												<xs:element name="from_offset" type="xs:short" minOccurs="0">
													<xs:annotation>
														<xs:documentation>number of days</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="till_time" type="time"/>
												<xs:element name="till_offset" type="xs:short" minOccurs="0">
													<xs:annotation>
														<xs:documentation>number of days</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="action_kind_code" type="code"/>
												<xs:choice minOccurs="0">
													<xs:element name="productId" type="id"/>
													<xs:element name="product_kind_code" type="code"/>
												</xs:choice>
												<xs:element name="sequence" type="xs:short"/>
												<xs:element name="dayofweekmask" type="xs:short">
													<xs:annotation>
														<xs:documentation>integer value of a bitarray: Sun + Mon*2 + Tue*4 + Wed*8 + Thu*16 + Fri*32 + Sat*64</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="capacity_value" type="xs:double" minOccurs="0"/>
												<xs:element name="capability_code" type="code" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="turnaround_duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Default turnaround duration in minutes for address between shifts</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="999999999"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="resource_kind_turnaround_durations" type="resource_kind_turnaround_durations" minOccurs="0"/>
			<xs:element name="resource_turnaround_durations" type="resource_turnaround_durations" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="divisions" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="division" type="division" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="address_activity_tariff">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="tariff">
				<xs:sequence>
					<xs:element name="addresses" type="addressesWithChoice" minOccurs="0"/>
					<xs:element name="action_kinds" type="action_kinds" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="address_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
			<xs:element name="handling_times" type="handling_times" minOccurs="0"/>
			<xs:element name="allowed_action_kinds" type="action_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which actions are allowed on addresses of this kind. The list is not used for restrictions but to filter the list of addresses when planning an action </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_products" type="products" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which products are not allowed on addresses of this kind </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_product_kinds" type="product_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which product kinds are not allowed on addresses of this kind </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resources" type="resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resources are not allowed on addresses of this kind </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resource kinds are not allowed on addresses of this kind</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="address_kinds">
		<xs:sequence>
			<xs:element name="address_kind_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addresses">
		<xs:sequence>
			<xs:element name="addressId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="addressesWithChoice">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="addressId" type="id"/>
			<xs:element name="address" type="address"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="agreement">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:choice minOccurs="0">
				<xs:annotation>
					<xs:documentation>empty element that specifies whether an agreement is credit or debit (default = credit)</xs:documentation>
				</xs:annotation>
				<xs:element name="credit"/>
				<xs:element name="debit"/>
			</xs:choice>
			<xs:element name="valid_from_date" type="date"/>
			<xs:element name="valid_till_date" type="date"/>
			<xs:choice>
				<xs:element name="contact" type="contact"/>
				<xs:element name="contactId" type="id"/>
				<xs:element name="subcontractor" type="subcontractor"/>
				<xs:element name="subcontractorId" type="id"/>
			</xs:choice>
			<xs:element name="company" type="company"/>
			<xs:element name="tariffs" type="tariffs" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="allowed_plan_regions">
		<xs:sequence>
			<xs:element name="allowed_plan_region" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="amounts">
		<xs:sequence>
			<xs:element name="amount" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="unit_code" type="code"/>
							<xs:element name="unit" type="unit"/>
						</xs:choice>
						<xs:element name="value" type="xs:double"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_amounts">
		<xs:sequence>
			<xs:element name="resource_amount" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="unit_code" type="code"/>
							<xs:element name="unit" type="unit"/>
						</xs:choice>
						<xs:element name="value" type="xs:double"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="appointment_window">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime"/>
			<xs:element name="till_instant" type="datetime"/>
			<xs:choice minOccurs="0">
				<xs:element name="appointment_kind">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="appointment_kind_code" type="code"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="area">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="area_kind_code" type="code" minOccurs="0"/>
			<xs:element name="area_parts" type="area_parts" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="area_part">
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="include">
					<xs:annotation>
						<xs:documentation>empty element indicating that this area part is included in the area (this is the default)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="exclude">
					<xs:annotation>
						<xs:documentation>empty element indicating that this area part is excluded from the area</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:choice>
				<xs:element name="world">
					<xs:annotation>
						<xs:documentation>empty element indicating that this area part contains all locations</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:sequence>
					<xs:element name="country_code" type="code">
						<xs:annotation>
							<xs:documentation>when given, only locations in this country are in this area part</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice>
						<xs:sequence>
							<xs:element name="state_name" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>when given, only locations in this state are in this area part</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="order2_subdiv" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>when given, only locations in this second order subdivision are in this area part (e.g. county in the UK, departement in France)</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="municipality" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>when given, only locations in this municipality are in this area part</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="city" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>when given, only locations in this city are in this area part</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="zipcode" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>when given, only locations with this zip code are in this area part</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
						<xs:sequence>
							<xs:element name="min_zipcode" type="xs:string">
								<xs:annotation>
									<xs:documentation>used for defining a zip code range</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="max_zipcode" type="xs:string">
								<xs:annotation>
									<xs:documentation>used for defining a zip code range</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:choice>
				</xs:sequence>
				<xs:element name="addressId" type="id">
					<xs:annotation>
						<xs:documentation>when given, only this address is in this area part</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="linked_area_code" type="code">
					<xs:annotation>
						<xs:documentation>when given, this area part consists of the given area</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="area_parts">
		<xs:sequence>
			<xs:element name="area_part" type="area_part" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="areapolygon">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="areapolygon_categories" type="areapolygon_categories" minOccurs="0"/>
			<xs:element name="points" type="points"/>
			<xs:element name="areapolygon_visualization" type="areapolygon_visualization" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="areapolygon_categories">
		<xs:sequence>
			<xs:element name="areapolygon_category" type="category" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="areapolygon_visualization">
		<xs:annotation>
			<xs:documentation>for visualization of the polygon on the map</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="outline" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="color" type="color" use="optional"/>
					<xs:attribute name="transparency" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:nonNegativeInteger">
								<xs:minInclusive value="0"/>
								<xs:maxInclusive value="100"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="width" type="xs:nonNegativeInteger" use="optional">
						<xs:annotation>
							<xs:documentation>in pixels</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="fill" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="color" type="color" use="optional"/>
					<xs:attribute name="transparency" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:nonNegativeInteger">
								<xs:minInclusive value="0"/>
								<xs:maxInclusive value="100"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="assignTo">
		<xs:sequence>
			<xs:element name="shift_templateId" type="id"/>
			<xs:element name="rollout_instant" type="datetime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="calendar">
		<xs:sequence>
			<xs:element name="timezone_code" type="timezone_code" minOccurs="0"/>
			<xs:element name="calendar_versions" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="calendar_version" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="from_date" type="date">
										<xs:annotation>
											<xs:documentation>start date of the cyclic calendar</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="till_date" type="date" minOccurs="0">
										<xs:annotation>
											<xs:documentation>deprecated</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="nof_weeks" type="xs:short" minOccurs="0">
										<xs:annotation>
											<xs:documentation>lengths (number of) in weeks of the current cycle (default = 1)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="day_entry" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="availability" type="availability">
													<xs:annotation>
														<xs:documentation>indicates the kind of availability corresponding to values of the kind of the calendar</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="week_index" type="xs:nonNegativeInteger" minOccurs="0">
													<xs:annotation>
														<xs:documentation>indicates the index of the right week, when number of weeks > 1</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="day_of_week">
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:maxLength value="2"/>
															<xs:enumeration value=""/>
															<xs:enumeration value="su"/>
															<xs:enumeration value="mo"/>
															<xs:enumeration value="tu"/>
															<xs:enumeration value="we"/>
															<xs:enumeration value="th"/>
															<xs:enumeration value="fr"/>
															<xs:enumeration value="sa"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
												<xs:element name="from_time" type="time">
													<xs:annotation>
														<xs:documentation>Time of day, between 00:00:00 and 23:59:59</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="till_time" type="time">
													<xs:annotation>
														<xs:documentation>Time of day, between 00:00:00 and 24:00:00. For till_time, the value 24:00:00 means: 00:00:00 on the next day.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="date_entries" type="date_entries" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="cancelCustomerTransportOrders">
		<xs:sequence>
			<xs:element name="order_status" type="order_status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>only order status with status kind cancel allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="customerTransportOrderId" type="id" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="cancelOrders">
		<xs:sequence>
			<xs:element name="order_status" type="order_status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>only order status with status kind cancel allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="projectid" type="id"/>
				<xs:element name="orderid" type="id" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="capabilities">
		<xs:sequence>
			<xs:element name="capability" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="capability_code"/>
							<xs:sequence>
								<xs:element name="code" type="code"/>
								<xs:element name="name" type="name"/>
							</xs:sequence>
						</xs:choice>
						<xs:choice>
							<xs:element name="available" type="xs:boolean"/>
							<xs:sequence>
								<xs:choice>
									<xs:element name="required" type="xs:boolean"/>
									<xs:element name="forbidden" type="xs:boolean"/>
								</xs:choice>
								<xs:element name="penalty" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation>indicates that this capability has a penalty, which indicates that the planning may override the restricting, but with additional costs</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="strict" type="xs:boolean" minOccurs="0"/>
							</xs:sequence>
						</xs:choice>
						<xs:element name="valid_from_date" type="date" minOccurs="0"/>
						<xs:element name="valid_till_date" type="date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="capacities">
		<xs:sequence>
			<xs:element name="capacity" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="unit_code" type="code"/>
							<xs:element name="unit" type="unit"/>
						</xs:choice>
						<xs:element name="value" type="xs:double"/>
						<xs:sequence minOccurs="0">
							<xs:element name="pickup_quantity" type="xs:positiveInteger">
								<xs:annotation>
									<xs:documentation>number of units per pickup</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="pickup_duration" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>time needed for pickup of number of units specified in pickup_quantity (default = 0)</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="delivery_quantity" type="xs:positiveInteger">
								<xs:annotation>
									<xs:documentation>number of units per delivery</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="delivery_duration" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>time needed for delivery of number of units specified in delivery_quantity (default = 0)</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="category">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="charter">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="sum" type="xs:float"/>
			<xs:element name="currency_code" type="code" minOccurs="0"/>
			<xs:choice>
				<xs:element name="contactId" type="id"/>
				<xs:element name="contact" type="contact"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="company">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="compartments">
		<xs:sequence>
			<xs:element name="compartment" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name" minOccurs="0"/>
						<xs:element name="position" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="maxTemperature" type="xs:float" minOccurs="0"/>
						<xs:choice minOccurs="0">
							<xs:element name="amounts" type="amounts"/>
							<xs:element name="capacities" type="capacities"/>
						</xs:choice>
						<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="completeTasks">
		<xs:sequence>
			<xs:element name="taskId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="complete" type="xs:boolean" use="required"/>
	</xs:complexType>
	<xs:complexType name="configuration">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="resourceId" type="id" minOccurs="0"/>
			<xs:element name="singleOrderCompartments" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>when true only a single order is allowed per compartment (default = False)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="compartments" type="compartments" minOccurs="0"/>
			<xs:element name="capacities">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="capacity" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:choice>
										<xs:element name="unit_code" type="code"/>
										<xs:element name="unit" type="unit"/>
									</xs:choice>
									<xs:element name="value" type="xs:double"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contact">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="contact_kind" type="contact_kind" minOccurs="0"/>
			<xs:element name="company" type="company" minOccurs="0"/>
			<xs:element name="initials" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="title" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="salutation" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="fileas_name" minOccurs="0">
				<xs:annotation>
					<xs:documentation>identifier denoting how to sort a contact</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="addressId" type="id"/>
				<xs:element name="address" type="address"/>
				<xs:element name="contactAddresses" type="contactAddresses"/>
			</xs:choice>
			<xs:element name="phone" type="phone" minOccurs="0"/>
			<xs:element name="phone2" type="phone" minOccurs="0"/>
			<xs:element name="fax" type="phone" minOccurs="0"/>
			<xs:element name="email" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="60"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="website" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="bankaccount" type="bankaccount" minOccurs="0"/>
			<xs:element name="birthdate" type="date" minOccurs="0"/>
			<xs:element name="gender" type="gender" minOccurs="0"/>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:element name="quality_level" type="code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>code of the quality level of the contact</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="allowed_cleaning_addresses" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the addresses that this contact allows cleaning on</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_contacts" type="contacts" minOccurs="0">
				<xs:annotation>
					<xs:documentation>contacts that are not allowed together in the same resource combination with this contact</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contamination_matrix_code" type="code" minOccurs="0"/>
			<xs:element name="require_purchase_order_number" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Does this contact require that its orders have a PO number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="require_order_reference" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Does this contact require that its orders have a reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contact_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contactAddress1">
		<xs:sequence>
			<xs:element name="contactId" type="id" minOccurs="0"/>
			<xs:element name="contactAddressKind" type="contactAddressKind" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contactAddress2">
		<xs:sequence>
			<xs:choice>
				<xs:element name="addressId" type="id"/>
				<xs:element name="address" type="address"/>
			</xs:choice>
			<xs:element name="contactAddressKind" type="contactAddressKind" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contactAddresses">
		<xs:sequence>
			<xs:element name="contactAddress" type="contactAddress2" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contactAddressKind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contacts">
		<xs:sequence>
			<xs:element name="contactId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="container_order">
		<xs:sequence>
			<xs:group ref="order_base_part1"/>
			<xs:element name="amounts" type="task_order_amounts" minOccurs="0"/>
			<xs:group ref="order_base_part2"/>
			<xs:choice>
				<xs:element name="resourceId" type="id"/>
				<xs:element name="resource" type="resource"/>
			</xs:choice>
			<xs:element name="ship_name" minOccurs="0">
				<xs:annotation>
					<xs:documentation>name of the ship where the container comes from or has to go</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ship_owner" minOccurs="0">
				<xs:annotation>
					<xs:documentation>owner of the ship where the container comes from or has to go</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="shipping_agent" minOccurs="0">
				<xs:annotation>
					<xs:documentation>agent of company who arranged the shipping</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="destination" minOccurs="0">
				<xs:annotation>
					<xs:documentation>destination of the container</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="document_info" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="task" type="task" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contamination_matrix">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="contamination_matrix_items" type="contamination_matrix_items"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contamination_matrix_item">
		<xs:sequence>
			<xs:element name="contamination_kind">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="nottogether"/>
						<xs:enumeration value="notafter"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:sequence>
				<xs:choice>
					<xs:element name="productId"/>
					<xs:element name="product_kind_code"/>
				</xs:choice>
				<xs:choice>
					<xs:element name="productId"/>
					<xs:element name="product_kind_code"/>
				</xs:choice>
			</xs:sequence>
			<xs:element name="number_of_loads_contaminating" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contamination_matrix_items">
		<xs:sequence>
			<xs:element name="contamination_matrix_item" type="contamination_matrix_item" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="coordinates">
		<xs:sequence>
			<xs:element name="x_coord"/>
			<xs:element name="y_coord"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="cost">
		<xs:sequence>
			<xs:element name="default_currency_code" type="code" minOccurs="0"/>
			<xs:element name="costItem" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="contactId" type="id" minOccurs="0"/>
						<xs:element name="price_kind_code" type="code"/>
						<xs:element name="sum" type="xs:float"/>
						<xs:element name="original_price" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="currency_code" type="code"/>
									<xs:element name="sum" type="xs:float"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="one_off" type="xs:boolean"/>
						<xs:element name="resourceId" type="resourceId" minOccurs="0"/>
						<xs:element name="start_addressId" type="id" minOccurs="0"/>
						<xs:element name="finish_addressId" type="id" minOccurs="0"/>
						<xs:element name="from_instant" type="datetime" minOccurs="0"/>
						<xs:element name="till_instant" type="datetime" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="costkind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="unit_code" type="code" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="costset">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="costsetitems">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="costsetitem" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="real_cost" type="xs:decimal"/>
									<xs:element name="plan_cost" type="xs:decimal"/>
									<xs:element name="unit_code" type="code" minOccurs="0"/>
									<xs:element name="costkind" type="costkind"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="countries">
		<xs:sequence>
			<xs:element name="country_code" type="country_code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="country_tariff">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="tariff">
				<xs:sequence>
					<xs:element name="countries" type="countries" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="couple">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="resourceId">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="id">
							<xs:attribute name="resource_tag" type="resource_tag"/>
							<xs:attribute name="type" type="xs:string"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="resource" type="resource"/>
			<xs:element name="driver" type="resource"/>
			<xs:element name="charter" type="charter"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="customer_transport_order">
		<xs:complexContent>
			<xs:extension base="customer_transport_order_details">
				<xs:sequence>
					<xs:element name="pickup_task" type="customer_transport_order_task"/>
					<xs:element name="delivery_task" type="customer_transport_order_task"/>
					<xs:element name="order_lines">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="order_line" type="customer_transport_order_line" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="customer_transport_order_details">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="order_number">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="priority" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>used by planning</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="order_date" type="date"/>
			<xs:choice minOccurs="0">
				<xs:element name="order_kind">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="order_kind_code" type="code"/>
			</xs:choice>
			<xs:element name="operational" type="xs:boolean" minOccurs="0"/>
			<xs:element name="order_status" type="order_status" minOccurs="0"/>
			<xs:choice>
				<xs:element name="contact" type="contact"/>
				<xs:element name="contactId"/>
			</xs:choice>
			<xs:element name="allowed_depots" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates where the product can/must be loaded</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="company" type="company"/>
				<xs:element name="companyId" type="id"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="department" type="department"/>
				<xs:element name="department_code" type="code"/>
			</xs:choice>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="purchase_order_number" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="allowForProposalPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowForBatchPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="urgency">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
							<xs:element name="sortingkey" minOccurs="0">
								<xs:annotation>
									<xs:documentation>internal alphanumeric for sorting urgencies</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:maxLength value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="urgency_code" type="code"/>
			</xs:choice>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="customer_transport_order_line">
		<xs:complexContent>
			<xs:extension base="customer_transport_order_line_details">
				<xs:sequence>
					<xs:element name="pickup_task" type="customer_transport_order_line_task" minOccurs="0"/>
					<xs:element name="delivery_task" type="customer_transport_order_line_task" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="customer_transport_order_line_details">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="order_line_number" type="xs:integer"/>
			<xs:choice>
				<xs:element name="product" type="product"/>
				<xs:element name="productId"/>
			</xs:choice>
			<xs:element name="product_description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="amounts" type="transport_order_amounts"/>
			<xs:element name="dimension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>in millimeters</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="length" type="xs:nonNegativeInteger"/>
						<xs:element name="width" type="xs:nonNegativeInteger"/>
						<xs:element name="height" type="xs:nonNegativeInteger"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="customer_transport_order_line_task">
		<xs:sequence>
			<xs:element name="id" type="id" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="station" type="station_with_optional_id"/>
				<xs:element name="stationId" type="id"/>
			</xs:choice>
			<xs:element name="duration_unit_of_measurement_code" type="duration_unit_of_measurement_code" minOccurs="0"/>
			<xs:element name="duration" type="duration" minOccurs="0"/>
			<xs:element name="complete" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>for historical orders. Completed orders cannot be planned.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="customer_transport_order_task">
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="address" type="address_with_optional_id"/>
				<xs:element name="addressId" type="id"/>
			</xs:choice>
			<xs:element name="start_window" type="datetime_window" minOccurs="0"/>
			<xs:element name="finish_window" type="datetime_window" minOccurs="0"/>
			<xs:element name="preferred_instant" type="datetime" minOccurs="0"/>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="task_position" type="task_position" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="date_entries">
		<xs:sequence>
			<xs:element name="date_entry" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="availability" type="availability">
							<xs:annotation>
								<xs:documentation>indicates the kind of availability corresponding to values of the kind of the calendar</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="from_instant" type="datetime"/>
						<xs:element name="till_instant" type="datetime"/>
						<xs:element name="comment" type="comment" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="datetime_window">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime" minOccurs="0"/>
			<xs:element name="till_instant" type="datetime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deleteCode">
		<xs:sequence>
			<xs:element name="code" type="code" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deleteids">
		<xs:sequence>
			<xs:element name="id" type="id" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deleteid">
		<xs:sequence>
			<xs:element name="id" type="id"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="deleteTrip">
		<xs:complexContent>
			<xs:extension base="deleteid"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="department">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="division" type="division" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="departments">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="department" type="department"/>
			<xs:element name="department_code" type="code"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="depot">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="address">
				<xs:sequence>
					<xs:element name="company" type="company" minOccurs="0"/>
					<xs:element name="division" type="division" minOccurs="0"/>
					<xs:element name="unit_conversions" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="unit_conversion" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="productId" type="id"/>
											<xs:element name="from_unit_code"/>
											<xs:element name="to_unit_code"/>
											<xs:element name="factor" type="xs:decimal"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="dgclassifications">
		<xs:sequence>
			<xs:element name="dgclassification" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name"/>
						<xs:element name="dgclassification_alternatives" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="dgclassification_alternative" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="dgclassification_code" type="code"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dghazard_class">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dgregulation">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="dgclassifications" type="dgclassifications"/>
			<xs:element name="dgrequirements" type="dgrequirements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dgrequirements">
		<xs:sequence>
			<xs:element name="dgrequirement" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="dgunnumber_code" type="code"/>
						<xs:element name="dgclassification_code" type="code"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dgunnumber">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="dghazard_class" type="dghazard_class"/>
			<xs:element name="temperature_dependent" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="division">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="expected">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime"/>
			<xs:element name="till_instant" type="datetime"/>
			<xs:element name="distance" type="xs:float" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="finished">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime"/>
			<xs:element name="till_instant" type="datetime"/>
			<xs:element name="distance" type="xs:float" minOccurs="0"/>
			<xs:element name="odometer" type="xs:integer" minOccurs="0"/>
			<xs:element name="addressId" type="id" minOccurs="0"/>
			<xs:element name="resources" type="resources" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="handling_times">
		<xs:sequence>
			<xs:element name="handling_time" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="action_kind_code" type="code"/>
						<xs:element name="unit_code" type="code" minOccurs="0">
							<xs:annotation>
								<xs:documentation>unit_code is required when variable tag is present</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="productId" type="id" minOccurs="0"/>
						<xs:element name="product_handling_group_code" type="code" minOccurs="0"/>
						<xs:element name="resource_kind_code" type="code" minOccurs="0"/>
						<xs:element name="fixed" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="duration" type="xs:double">
										<xs:annotation>
											<xs:documentation>duration in minutes</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="variable" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="duration" type="xs:double">
										<xs:annotation>
											<xs:documentation>duration in minutes</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="per_quantity" type="xs:double"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="batch" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="duration" type="xs:double">
										<xs:annotation>
											<xs:documentation>duration in minutes</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="size" type="xs:double"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="human_resource">
		<xs:complexContent>
			<xs:extension base="resource">
				<xs:sequence>
					<xs:element name="contact" type="contact"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="load_assignment">
		<xs:sequence>
			<xs:element name="load_part" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:choice>
						<xs:element name="amounts" type="amounts"/>
						<xs:sequence>
							<xs:choice>
								<xs:element name="resourceId" type="id"/>
								<xs:element name="resource_kind_code" type="code"/>
							</xs:choice>
							<xs:element name="configurationId" type="id"/>
							<xs:element name="productId" type="id" minOccurs="0"/>
							<xs:element name="compartments" type="compartments"/>
						</xs:sequence>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="metaOrder">
		<xs:sequence>
			<xs:element name="searchCriteria" type="orderSearchCriteria">
				<xs:annotation>
					<xs:documentation>requirements the order must comply with</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="metaTask">
		<xs:sequence>
			<xs:element name="searchCriteria" type="taskSearchCriteria">
				<xs:annotation>
					<xs:documentation>requirements the task must comply with</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="metaOrder" type="metaOrder" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="order_base_part1">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="order_number">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="order_line_number" type="xs:integer" minOccurs="0"/>
			<xs:element name="order_template_number" minOccurs="0">
				<xs:annotation>
					<xs:documentation>used for recurrent and structural orders</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="priority" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>used by planning</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="order_date" type="date"/>
			<xs:choice minOccurs="0">
				<xs:element name="order_kind">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="order_kind_code" type="code"/>
			</xs:choice>
			<xs:element name="operational" type="xs:boolean" minOccurs="0"/>
			<xs:element name="order_status" type="order_status" minOccurs="0"/>
			<xs:choice>
				<xs:element name="contact" type="contact"/>
				<xs:element name="contactId"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="product" type="product"/>
				<xs:element name="productId"/>
			</xs:choice>
			<xs:element name="product_description" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="order_base_part2">
		<xs:sequence>
			<xs:element name="dimension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>in millimeters</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="length" type="xs:nonNegativeInteger"/>
						<xs:element name="width" type="xs:nonNegativeInteger"/>
						<xs:element name="height" type="xs:nonNegativeInteger"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="allowed_depots" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates where the product can/must be loaded</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="suborders" type="suborders" minOccurs="0"/>
			<xs:element name="incoterm" type="code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>three letter international commercial term that belongs to the order</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="sum" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>actual price of the order</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="currency_code" type="currency_code" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="company" type="company"/>
				<xs:element name="companyId" type="id"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="department" type="department"/>
				<xs:element name="department_code" type="code"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:annotation>
					<xs:documentation>only allowed when the order is not part of a project itself</xs:documentation>
				</xs:annotation>
				<xs:element name="project" type="project"/>
				<xs:element name="projectId" type="id"/>
			</xs:choice>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="purchase_order_number" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="allowForProposalPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowForBatchPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="user" type="code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>user who booked the order</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="parameterset_code" type="code" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="urgency">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
							<xs:element name="sortingkey" minOccurs="0">
								<xs:annotation>
									<xs:documentation>internal alphanumeric for sorting urgencies</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:maxLength value="10"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="urgency_code" type="code"/>
			</xs:choice>
			<xs:element name="order_template" type="order_template" minOccurs="0">
				<xs:annotation>
					<xs:documentation>import only. indicates that the order is a template order</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ordersets" minOccurs="0">
				<xs:annotation>
					<xs:documentation>import only</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="orderset_code" type="code" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="order_info">
		<xs:sequence>
			<xs:element name="transports" type="transports"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="order_status">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status_kind">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
						<xs:enumeration value="normal"/>
						<xs:enumeration value="no show"/>
						<xs:enumeration value="cancel"/>
						<xs:enumeration value="inactive"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="order_template">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="from_date" type="date" minOccurs="0"/>
			<xs:element name="till_date" type="date" minOccurs="0"/>
			<xs:element name="active" type="active"/>
			<xs:choice>
				<xs:element name="recurrence" type="recurrence" minOccurs="0"/>
				<xs:element name="visit_pattern" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
							<xs:element name="number_of_visits" type="xs:positiveInteger"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="orderSearchCriteria">
		<xs:attribute name="order_date" type="xs:date">
			<xs:annotation>
				<xs:documentation>when this attribute is present search for order is based on order date and orderTemplateNumber</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="orderNumber" type="xs:string">
			<xs:annotation>
				<xs:documentation>when this attribute is present search for order is based on order number</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="orderTemplateNumber" type="code">
			<xs:annotation>
				<xs:documentation>when this attribute is present search for order is based on order date and orderTemplateNumber</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="order_externalId" type="id">
			<xs:annotation>
				<xs:documentation>when this attribute is present search for order is based on external id</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="orderStatus">
		<xs:sequence>
			<xs:element name="orderId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cancelled" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>indicates if the order has been cancelled</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="parameter">
		<xs:sequence>
			<xs:element name="code" type="xs:string"/>
			<xs:element name="value" type="xs:anySimpleType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameter_tuple">
		<xs:annotation>
			<xs:documentation>The parameters with code: from_area, to_area, resource_kind, product, price_category, road_type and vehicle_profile are interpreted as a reference to resp. an area, a resource kind, a product, a price category, a road type or a vehicle profile. The value that is expected, is the corde of the referred entity, with the exception of product where the external id is expected and road type where the road type number is expected.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="parameter" type="parameter" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>allowed parameters depend on the chosen tariff item specification</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameter_tuples">
		<xs:sequence>
			<xs:element name="parameter_tuple" type="parameter_tuple" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameterset">
		<xs:annotation>
			<xs:documentation>export only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="plan_region">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="plan_group">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="planned">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime"/>
			<xs:element name="till_instant" type="datetime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="planned_task">
		<xs:annotation>
			<xs:documentation>export only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="taskId" type="id"/>
			<xs:element name="orderId" type="id"/>
			<xs:element name="task_kind" type="action_kind" minOccurs="0"/>
			<xs:element name="order_info" type="order_info" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="planned_transport_task">
		<xs:sequence>
			<xs:element name="orderId" type="id"/>
			<xs:element name="taskId" type="id"/>
			<xs:element name="order_info" type="order_info" minOccurs="0"/>
			<xs:element name="realisedAmounts" type="amounts" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="point">
		<xs:attribute name="x" type="x-coordinate" use="required"/>
		<xs:attribute name="y" type="y-coordinate" use="required"/>
	</xs:complexType>
	<xs:complexType name="points">
		<xs:sequence>
			<xs:element name="point" type="point" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="predefinedCalendar">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="calendar_tag" type="calendar_tag"/>
			<xs:element name="calendar" type="calendar"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="price_categories">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="price_category_code" type="code"/>
			<xs:element name="price_category" type="price_category"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="price_category">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="product">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="product_kind">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:element name="dgunnumber_code" type="code" minOccurs="0"/>
			<xs:element name="price_categories" type="price_categories" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
			<xs:element name="not_allowed_addresses" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates on which addresses the product is not allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_address_kinds" type="address_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates on which address kinds the product is not allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resources" type="resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates with which resources may/can not transport the product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates with which resource kinds may/can not transport the product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_stations" type="stations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates on which stations the product is not allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_station_kinds" type="station_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates on which station kinds the product is not allowed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="product_handling_group" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="product_handling_group_code" type="code" minOccurs="0"/>
			</xs:choice>
			<xs:element name="unit_conversions" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="unit_conversion" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="from_unit_code"/>
									<xs:element name="to_unit_code"/>
									<xs:element name="factor" type="xs:decimal"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="product_kinds">
		<xs:sequence>
			<xs:element name="product_kind_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="products">
		<xs:sequence>
			<xs:element name="productId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="project">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="rulesetCode" type="code" minOccurs="0"/>
			<xs:choice>
				<xs:element name="projectStatus">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="project_status_code" type="code"/>
			</xs:choice>
			<xs:element name="from_instant" type="datetime" minOccurs="0"/>
			<xs:element name="till_instant" type="datetime" minOccurs="0"/>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
			<xs:element name="orders" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="transport_order" type="transport_order" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="realised_load">
		<xs:sequence>
			<xs:element name="load_part" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:sequence minOccurs="0">
							<xs:element name="resourceId" type="id"/>
							<xs:element name="compartment_code" type="code"/>
						</xs:sequence>
						<xs:element name="productId" type="id" minOccurs="0"/>
						<xs:element name="amounts" type="amounts"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="recurrence">
		<xs:sequence>
			<xs:element name="active" type="active"/>
			<xs:element name="recurrence_type">
				<xs:annotation>
					<xs:documentation>0 = daily; 1 = weekly; 2 = monthly; 3 = yearly; 4 = timetable</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:short">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="recurrence_dayofmonth" minOccurs="0">
				<xs:annotation>
					<xs:documentation>day of the month on which the pattern recurs</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:short">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="31"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="recurrence_dayofweekmask" type="xs:short" minOccurs="0">
				<xs:annotation>
					<xs:documentation>integer value of a bitarray: Sun + Mon*2 + Tue*4 + Wed*8 + Thu*16 + Fri*32 + Sat*64</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="recurrence_monthofyear" minOccurs="0">
				<xs:annotation>
					<xs:documentation>month of the year in which the pattern recurs</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:short">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="12"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="recurrence_interval" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>number of recurrence units between recurrences of the pattern</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="recurrence_instance" type="xs:short" minOccurs="0">
				<xs:annotation>
					<xs:documentation>instance of the day within the month on which the pattern recurs</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pattern_start_date" type="date"/>
			<xs:choice>
				<xs:element name="pattern_end_date" type="date"/>
				<xs:element name="pattern_occurence" type="xs:nonNegativeInteger">
					<xs:annotation>
						<xs:documentation>number of occurrences of the recurrence pattern</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="no_end_date" type="xs:boolean"/>
			</xs:choice>
			<xs:element name="recurrence_times" minOccurs="0">
				<xs:annotation>
					<xs:documentation>times of the day for every week on which the pattern recurs</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="recurrence_time" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="recurrence_dayofweekmask" type="xs:short">
										<xs:annotation>
											<xs:documentation>mask for the days of the week on which the pattern recurs</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="rollout_time" type="time"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="exception_pattern" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="exception" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:choice>
									<xs:sequence>
										<xs:element name="preferred_instant" type="datetime"/>
										<xs:element name="exception_instant" type="datetime" minOccurs="0"/>
									</xs:sequence>
									<xs:sequence>
										<xs:element name="pattern_date" type="date"/>
										<xs:sequence minOccurs="0">
											<xs:element name="rollout_date" type="date"/>
											<xs:element name="rollout_times" minOccurs="0">
												<xs:complexType>
													<xs:sequence>
														<xs:element name="rollout_time" type="time" maxOccurs="unbounded"/>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:sequence>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="calendar" type="calendar"/>
				<xs:element name="calendarId" type="id"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:choice>
				<xs:element name="resource_kind" type="resource_kind"/>
				<xs:element name="resource_kind_code" type="code"/>
			</xs:choice>
			<xs:element name="resource_tag" type="resource_tag" minOccurs="0"/>
			<xs:element name="modality" type="code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>code of a modality</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="resource_status">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="code" type="code"/>
							<xs:element name="name" type="name"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="resource_status_code" type="code"/>
			</xs:choice>
			<xs:element name="resource_amounts" type="resource_amounts" minOccurs="0"/>
			<xs:element name="resource_categories" minOccurs="0">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="resource_category" type="category"/>
						<xs:element name="resource_category_code" type="code"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:element name="subcontractorId" type="id" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="division" type="division"/>
				<xs:element name="division_code" type="code"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="address" type="address"/>
				<xs:element name="addressId" type="id"/>
			</xs:choice>
			<xs:element name="comm_code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>code used for external communication (e.g. for on-board computers)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="60"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="reference" minOccurs="0">
				<xs:annotation>
					<xs:documentation>resource reference</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="capacities">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="capacity" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:choice>
											<xs:element name="unit_code" type="code"/>
											<xs:element name="unit" type="unit"/>
										</xs:choice>
										<xs:element name="value" type="xs:double">
											<xs:annotation>
												<xs:documentation>This value will also be used to set the pickup quantity and the deliver quantity. For full control of import please use the configurations tag instead.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="configurations">
					<xs:annotation>
						<xs:documentation>import only</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="configurationId" type="id"/>
							<xs:element name="configuration" type="configuration"/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="allowed_plan_regions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which plan regions the resource may/can visit</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="allowed_plan_region" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="not_allowed_addresses" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which addresses the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_address_kinds" type="address_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which address kinds the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_products" type="products" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which products the resource may/can not transport</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_product_kinds" type="product_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which product kinds the resource may/can not transport</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resources" type="resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates with which resources the resource may/can not be combined with</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates with which resource kinds the resource may/can not be combined with</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_stations" type="stations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which stations the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_station_kinds" type="station_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which station kinds the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="departments" type="departments" minOccurs="0"/>
			<xs:element name="resource_classifications" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="resource_classification" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="dgregulation_code" type="code"/>
									<xs:element name="dgclassification_code" type="code"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="resource_contracts" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="resource_contract" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="contract_availability" type="xs:double">
										<xs:annotation>
											<xs:documentation>the availability of the contract in number of hours per week</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="min_availability" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>the minimum availablity in hours per week</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="max_availability" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>the maximum availablity in hours per week</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="valid_from_date" type="date" minOccurs="0"/>
									<xs:element name="valid_till_date" type="date" minOccurs="0"/>
									<xs:element name="rulesetCode" type="code" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="assignIssuesToUserGroupName" type="name">
					<xs:annotation>
						<xs:documentation>name of the user group that an issue is assigned to when the resource sends a message to comtec</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="assignIssuesToUserName" type="name">
					<xs:annotation>
						<xs:documentation>name of the user that an issue is assigned to when the resource sends a message to comtec</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="action_durations" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="action_duration" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="action_kind_code" minOccurs="0">
										<xs:annotation>
											<xs:documentation>when action_kind_code is omitted, the duration factor applies to all action kinds</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="duration_factor"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="cost_set_code" type="code" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="companyId" type="id"/>
				<xs:element name="company" type="company"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="resource_tag" type="resource_tag" minOccurs="0"/>
			<xs:element name="modality" type="code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>code of a modality</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="assignIssuesToUserGroupName" type="name">
					<xs:annotation>
						<xs:documentation>name of the user group that an issue is assigned to when a resource of the resource kind sends a message to comtec</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="assignIssuesToUserName" type="name">
					<xs:annotation>
						<xs:documentation>name of user that an issue is assigned to when a resource of the resource kind sends a message to comtec</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="resource_amounts" type="resource_amounts" minOccurs="0"/>
			<xs:element name="resource_categories" minOccurs="0">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="resource_category" type="category"/>
						<xs:element name="resource_category_code" type="code"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="capacities">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="capacity" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:choice>
											<xs:element name="unit_code" type="code"/>
											<xs:element name="unit" type="unit"/>
										</xs:choice>
										<xs:element name="value" type="xs:double">
											<xs:annotation>
												<xs:documentation>This value will also be used to set the pickup quantity and the deliver quantity. For full control of import please use the configurations tag instead.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="configurations">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="configurationId" type="id"/>
							<xs:element name="configuration" type="configuration"/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="allowed_plan_regions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which plan regions the resource may/can visit</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="allowed_plan_region" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="not_allowed_addresses" type="addresses" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which addresses the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_address_kinds" type="address_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which address kinds the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates with which resource kinds the resource may/can not be combined with</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_stations" type="stations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which stations the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_station_kinds" type="station_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which station kinds the resource may/can not visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="resource_kind_regulations" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="resource_kind_regulation" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="dgregulation_code"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="cost_set_code" type="code" minOccurs="0"/>
			<xs:element name="vehicleKindCode" type="code" minOccurs="0"/>
			<xs:element name="emissionFactor" type="emissionFactor" minOccurs="0"/>
			<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_kind_turnaround_durations">
		<xs:sequence>
			<xs:element name="resource_kind_turnaround_duration" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="resource_kind_code" type="code"/>
						<xs:element name="duration">
							<xs:annotation>
								<xs:documentation>duration in minutes</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="999999999"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_kinds">
		<xs:sequence>
			<xs:element name="resource_kind_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_kindsWithChoice">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="resource_kind_code" type="code"/>
			<xs:element name="resource_kind" type="resource_kind"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="resource_order">
		<xs:sequence>
			<xs:group ref="order_base_part1"/>
			<xs:element name="amounts" type="task_order_amounts" minOccurs="0"/>
			<xs:group ref="order_base_part2"/>
			<xs:choice>
				<xs:element name="resourceId" type="id"/>
				<xs:element name="resource" type="resource"/>
			</xs:choice>
			<xs:element name="task" type="task" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resource_tariff">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="tariff">
				<xs:sequence>
					<xs:element name="resources" type="resourcesWithChoice" minOccurs="0"/>
					<xs:element name="resource_kinds" type="resource_kindsWithChoice" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="resource_turnaround_durations">
		<xs:sequence>
			<xs:element name="resource_turnaround_duration" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="resourceId" type="id"/>
						<xs:element name="duration">
							<xs:annotation>
								<xs:documentation>duration in minutes</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="999999999"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resourceCalendar">
		<xs:annotation>
			<xs:documentation>Only the calendar of an existing resource is updated</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="updateCalendar" type="updateCalendar"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resourceId">
		<xs:simpleContent>
			<xs:extension base="id">
				<xs:attribute name="resource_tag">
					<xs:annotation>
						<xs:documentation>export only</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="type">
					<xs:annotation>
						<xs:documentation>export only</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="resources">
		<xs:sequence>
			<xs:element name="resourceId" type="resourceId" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="resourcesWithChoice">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="resourceId" type="resourceId"/>
			<xs:element name="resource" type="resource"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="resourcesWithChoiceAndTemporary">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="resourceId" type="id"/>
			<xs:element name="resource" type="resource"/>
			<xs:element name="temporaryResource" type="temporaryResource"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="roadfeature_tariff">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="tariff">
				<xs:sequence>
					<xs:element name="roadfeatures" type="roadfeatures" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="roadfeatures">
		<xs:sequence>
			<xs:element name="roadfeature_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ruleset">
		<xs:sequence>
			<xs:element name="rulegroup" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="from_date" type="date" minOccurs="0"/>
						<xs:element name="till_date" type="date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="schedule_shift_template">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="shift_template_identifiers"/>
			<xs:element name="schedule_template_code" type="code"/>
			<xs:group ref="shift_template_base"/>
			<xs:element name="modality" type="code" minOccurs="0"/>
			<xs:group ref="shift_template_children"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="schedule_template">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:choice>
				<xs:element name="start_date" type="date"/>
				<xs:element name="start_instant" type="datetime"/>
			</xs:choice>
			<xs:element name="number_of_days" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="visit_schedule_code" type="code" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="shift_templates" type="shift_templates" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="section_template">
		<xs:sequence>
			<xs:group ref="shift_template_identifiers"/>
			<xs:group ref="shift_template_base"/>
			<xs:sequence minOccurs="0">
				<xs:element name="modality" type="code"/>
				<xs:element name="accompanyCombination" type="code" minOccurs="0">
					<xs:annotation>
						<xs:documentation>only applicable when modality is not road</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="assignTo" type="assignTo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>information about the shift, this shift should be assigned to on rollout</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="action_templates" type="action_templates" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="section_templates">
		<xs:sequence>
			<xs:element name="shift_template" type="section_template" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shift">
		<xs:annotation>
			<xs:documentation>import only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code" minOccurs="0"/>
			<xs:element name="name">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="128"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="template_code" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="shift_kind" type="shift_kind" minOccurs="0"/>
			<xs:element name="shift_status" type="shift_status" minOccurs="0"/>
			<xs:element name="shift_tag" type="shift_tag" minOccurs="0"/>
			<xs:sequence minOccurs="0">
				<xs:element name="modality" type="code"/>
				<xs:element name="accompanyCombination" type="code" minOccurs="0">
					<xs:annotation>
						<xs:documentation>only when shiftTag is 3 and modality is not road</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="volatile" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates if the shift is owned by the planning</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="operational" type="xs:boolean" minOccurs="0"/>
			<xs:element name="department" type="department" minOccurs="0"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="from_instant" type="datetime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>deprecated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="till_instant" minOccurs="0">
						<xs:annotation>
							<xs:documentation>deprecated</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:sequence>
					<xs:element name="start_window" type="datetime_window" minOccurs="0"/>
					<xs:element name="finish_window" type="datetime_window" minOccurs="0"/>
				</xs:sequence>
			</xs:choice>
			<xs:element name="reference_start_instant" type="datetime" minOccurs="0"/>
			<xs:element name="reference_finish_instant" type="datetime" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="start_addressId" type="id"/>
				<xs:element name="start_stationId" type="id"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="finish_addressId" type="id"/>
				<xs:element name="finish_stationId" type="id"/>
			</xs:choice>
			<xs:element name="resources" type="resourcesWithChoice" minOccurs="0"/>
			<xs:element name="subcontractorId" type="id" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="resource_kind_code" type="code"/>
				<xs:element name="resource_kind" type="resource_kind"/>
			</xs:choice>
			<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
			<xs:element name="allowed_plan_regions" type="allowed_plan_regions" minOccurs="0"/>
			<xs:element name="shiftsets" type="shiftsets" minOccurs="0"/>
			<xs:element name="price_categories" type="price_categories" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="sum" type="xs:float" minOccurs="0"/>
			<xs:element name="currency_code" type="code" minOccurs="0"/>
			<xs:element name="allowForProposalPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowForBatchPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="cost_set_code" type="code" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shift_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="shift_tag" type="shift_tag" minOccurs="0"/>
			<xs:element name="modality" type="code" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shift_status">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="status_kind">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="10"/>
						<xs:enumeration value="normal"/>
						<xs:enumeration value="cancel"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shift_template">
		<xs:sequence>
			<xs:group ref="shift_template_identifiers"/>
			<xs:group ref="shift_template_base"/>
			<xs:sequence minOccurs="0">
				<xs:element name="modality" type="code"/>
				<xs:element name="accompanyCombination" type="code" minOccurs="0">
					<xs:annotation>
						<xs:documentation>only applicable when modality is not road</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="combine_resources" type="combine_resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates the resources must combined in the trip</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="recurrence" type="recurrence" minOccurs="0"/>
			<xs:group ref="shift_template_children"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="shift_template_base">
		<xs:sequence>
			<xs:element name="template_code" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="shift_kind" type="shift_kind"/>
				<xs:element name="shift_kind_code" type="code"/>
			</xs:choice>
			<xs:element name="shift_tag" type="shift_tag" minOccurs="0"/>
			<xs:element name="volatile" type="xs:boolean" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="department" type="department"/>
				<xs:element name="department_code" type="code"/>
			</xs:choice>
			<xs:element name="start_time_window" type="time_window" minOccurs="0"/>
			<xs:element name="finish_time_window" type="time_window" minOccurs="0"/>
			<xs:element name="reference_time_window" type="time_window" minOccurs="0"/>
			<xs:element name="planned" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="planned"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="start_addressId" type="id"/>
				<xs:element name="start_stationId" type="id"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="finish_addressId" type="id"/>
				<xs:element name="finish_stationId" type="id"/>
			</xs:choice>
			<xs:element name="resources" type="resourcesWithChoiceAndTemporary" minOccurs="0"/>
			<xs:element name="subcontractorId" type="id" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="resource_kind_code" type="code"/>
				<xs:element name="resource_kind" type="resource_kind"/>
			</xs:choice>
			<xs:element name="ruleset" type="ruleset" minOccurs="0"/>
			<xs:element name="allowed_plan_regions" type="allowed_plan_regions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which plan regions a shift may/can visit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="price_categories" type="price_categories" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="sum" type="xs:float" minOccurs="0"/>
			<xs:element name="currency_code" type="code" minOccurs="0"/>
			<xs:element name="allowForProposalPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowForBatchPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="cost_set_code" type="code" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="shift_template_children">
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="shift_templates" type="section_templates"/>
				<xs:element name="action_templates" type="action_templates"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="shift_template_identifiers">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code" minOccurs="0"/>
			<xs:element name="name">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="128"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="active" type="active" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="shiftsets">
		<xs:sequence>
			<xs:element name="shiftset_code" type="code" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shift_templates">
		<xs:sequence>
			<xs:element name="shift_template" type="shift_template" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="shiftTemplateResources">
		<xs:complexContent>
			<xs:extension base="resourcesWithChoice">
				<xs:sequence>
					<xs:element name="temporaryResource" type="temporaryResource" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="station">
		<xs:annotation>
			<xs:documentation>Default for inheritAddress is true unless parent_stationId is empty. inheritAddress can only be true if parent_station is not empty.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:group ref="station_base"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="station_with_optional_id">
		<xs:sequence>
			<xs:element name="id" type="id" minOccurs="0"/>
			<xs:group ref="station_base"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="station_base">
		<xs:sequence>
			<xs:element name="code" type="code" minOccurs="0"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:element name="station_kind">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="parent_stationId" type="id" minOccurs="0"/>
			<xs:element name="departments" type="departments" minOccurs="0"/>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="address" type="address"/>
				<xs:element name="inheritAddress" type="xs:boolean"/>
				<xs:element name="addressId" type="id"/>
				<xs:element name="depot" type="depot"/>
			</xs:choice>
			<xs:element name="temporary" type="xs:boolean" minOccurs="0"/>
			<xs:element name="pickup_duration" type="duration" minOccurs="0"/>
			<xs:element name="delivery_duration" type="duration" minOccurs="0"/>
			<xs:element name="processingDuration" type="duration" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="capacities" type="capacities" minOccurs="0"/>
			<xs:element name="parameterset" type="parameterset" minOccurs="0"/>
			<xs:element name="handling_times" type="handling_times" minOccurs="0"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="not_allowed_products" type="products" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which products are not allowed on the station</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_product_kinds" type="product_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which product kinds are not allowed on the station</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resources" type="resources" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resources may/can use the station</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="not_allowed_resource_kinds" type="resource_kinds" minOccurs="0">
				<xs:annotation>
					<xs:documentation>indicates which resource kinds may/can use the station</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="storage" type="storage" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="station_kinds">
		<xs:sequence>
			<xs:element name="station_kind_code" type="code" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="stations">
		<xs:sequence>
			<xs:element name="stationId" type="id" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="stock_measurement">
		<xs:annotation>
			<xs:documentation>Measurement of stock in a storage or on an address.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="id" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When not given a new stock measurement is inserted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:sequence>
					<xs:choice>
						<xs:element name="storageId" type="id"/>
						<xs:element name="stationId" type="id"/>
					</xs:choice>
					<xs:element name="productId" type="id" minOccurs="0"/>
					<xs:choice minOccurs="0">
						<xs:element name="unit_code" type="code" minOccurs="0"/>
						<xs:element name="alt_unit_code" minOccurs="0"/>
					</xs:choice>
				</xs:sequence>
				<xs:sequence>
					<xs:element name="addressId" type="id"/>
					<xs:element name="productId" type="id"/>
					<xs:element name="unit_code" type="code"/>
				</xs:sequence>
			</xs:choice>
			<xs:element name="measurement_instant" type="xs:dateTime"/>
			<xs:element name="stock_measurement_kind" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code"/>
						<xs:element name="name"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="value" type="xs:decimal"/>
			<xs:element name="delta" type="xs:boolean"/>
			<xs:element name="sequence" type="xs:integer" minOccurs="0"/>
			<xs:element name="relevant" type="xs:boolean" minOccurs="0"/>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="storage_dimension">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="sphere">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="unit_of_measurement_code" type="code"/>
							<xs:element name="diameter">
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:totalDigits value="14"/>
										<xs:fractionDigits value="7"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="horizontal_cylinder">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="unit_of_measurement_code" type="code"/>
							<xs:element name="diameter">
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:totalDigits value="14"/>
										<xs:fractionDigits value="7"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="length">
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:totalDigits value="14"/>
										<xs:fractionDigits value="7"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="vertical_cylinder">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="unit_of_measurement_code" type="code"/>
							<xs:element name="diameter">
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:totalDigits value="14"/>
										<xs:fractionDigits value="7"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="height">
								<xs:simpleType>
									<xs:restriction base="xs:decimal">
										<xs:totalDigits value="14"/>
										<xs:fractionDigits value="7"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="storage">
		<xs:annotation>
			<xs:documentation>A storage is a location on which we want to keep track of the stock. A storage defines capacity on a location. A storage is either owned by an address or a station.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="storage_kind" type="storage_kind"/>
			<xs:choice minOccurs="0">
				<xs:element name="product" type="product"/>
				<xs:element name="productId" type="id"/>
			</xs:choice>
			<xs:element name="capacity">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="14"/>
						<xs:fractionDigits value="7"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="unit_of_measurement_code" type="code"/>
			<xs:choice minOccurs="0">
				<xs:element name="min_stock" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:decimal">
							<xs:totalDigits value="14"/>
							<xs:fractionDigits value="7"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="min_stock_factor" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:decimal">
							<xs:totalDigits value="7"/>
							<xs:fractionDigits value="4"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="max_stock" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:decimal">
							<xs:totalDigits value="14"/>
							<xs:fractionDigits value="7"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="max_stock_factor" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:decimal">
							<xs:totalDigits value="7"/>
							<xs:fractionDigits value="4"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:choice>
			<xs:element name="storage_dimension" type="storage_dimension" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="storage_kind">
		<xs:sequence>
			<xs:element name="code">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="80"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="name" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="160"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="quantity_code"/>
			<xs:element name="min_stock_factor" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="max_stock_factor" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="7"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="subcontractor">
		<xs:complexContent>
			<xs:extension base="contact">
				<xs:sequence>
					<xs:element name="parameterset" type="parameterset" minOccurs="0"/>
					<xs:element name="use_exchange" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>indicates that orders can be exchanged directly with the system of the subcontractor</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="subcontractors">
		<xs:sequence>
			<xs:element name="subcontractorId" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="suborder">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:choice minOccurs="0">
				<xs:element name="product" type="product"/>
				<xs:element name="productId" type="id"/>
			</xs:choice>
			<xs:element name="suborder_description" type="name" minOccurs="0"/>
			<xs:element name="amounts" type="amounts" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="suborders">
		<xs:sequence>
			<xs:element name="suborder" type="suborder" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tariff">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="valid_from_date" type="date"/>
			<xs:element name="valid_till_date" type="date"/>
			<xs:element name="price_kind_code" type="code"/>
			<xs:element name="active" type="active" minOccurs="0"/>
			<xs:element name="tariff_items" type="tariff_items" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tariff_item">
		<xs:sequence>
			<xs:element name="name" type="name"/>
			<xs:element name="tariff_item_spec" type="code">
				<xs:annotation>
					<xs:documentation>code of the tariff item specification</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="currency_code" type="currency_code"/>
			<xs:element name="valid_from_date" type="date"/>
			<xs:element name="valid_till_date" type="date"/>
			<xs:element name="level" type="xs:short" minOccurs="0">
				<xs:annotation>
					<xs:documentation>amounts are calculated level by level, starting with level 0 (default = 0)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unit_code" type="code" minOccurs="0"/>
			<xs:element name="parameter_tuples" type="parameter_tuples" minOccurs="0">
				<xs:annotation>
					<xs:documentation>parameter_tuples define the staggered prices</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tariff_items">
		<xs:sequence>
			<xs:element name="tariff_item" type="tariff_item" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tariffs">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="address_activity_tariff" type="address_activity_tariff"/>
			<xs:element name="country_tariff" type="country_tariff"/>
			<xs:element name="resource_tariff" type="resource_tariff"/>
			<xs:element name="roadfeature_tariff" type="roadfeature_tariff"/>
			<xs:element name="tariffId" type="id"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="task">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="orderId" type="id" minOccurs="0">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="task_kind" type="task_kind"/>
				<xs:element name="task_kind_code"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="address" type="address_with_optional_id"/>
				<xs:element name="addressId" type="id"/>
				<xs:element name="station" type="station_with_optional_id"/>
				<xs:element name="stationId" type="id"/>
			</xs:choice>
			<xs:element name="sequence" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When the setting CDMS/Task/ImportTaskSequenceAsRelation is True then the sequence defines the precedence relations for the tasks within the task_order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="task_window" type="task_window">
					<xs:annotation>
						<xs:documentation>deprecated</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:sequence>
					<xs:element name="start_window" type="datetime_window" minOccurs="0"/>
					<xs:element name="finish_window" type="datetime_window" minOccurs="0"/>
				</xs:sequence>
			</xs:choice>
			<xs:element name="appointment_window" type="appointment_window" minOccurs="0"/>
			<xs:element name="duration_unit_of_measurement_code" type="duration_unit_of_measurement_code" minOccurs="0"/>
			<xs:element name="duration" type="duration" minOccurs="0"/>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="preferred_instant" type="datetime" minOccurs="0"/>
			<xs:element name="preferred_resources" type="resources" minOccurs="0"/>
			<xs:element name="allowed_subcontractors" type="subcontractors" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:choice>
				<xs:element name="task_cluster" type="task_cluster" minOccurs="0"/>
				<xs:element name="task_clusters" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="task_cluster" type="task_cluster" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="predecessor_tasks" type="taskReferences" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allowed only when the setting CDMS\Task\ImportTaskSequenceAsRelation is False.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="successor_tasks" type="taskReferences" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allowed only when the setting CDMS\Task\ImportTaskSequenceAsRelation is False.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="task_position" type="task_position" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="amounts" type="amounts" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="task_cluster">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When not provided, type defaults to addressMatch</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="addressMatch"/>
						<xs:enumeration value="executionShift"/>
						<xs:enumeration value="maxDurationBetween"/>
						<xs:enumeration value="resourceMatch"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="task_kind">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="task_spec_code" type="code"/>
			<xs:element name="task_spec_name" type="name" minOccurs="0">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="task_order_amounts">
		<xs:sequence>
			<xs:element name="amount" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="unit_code" type="code"/>
						<xs:element name="value" type="xs:double"/>
						<xs:element name="realisedPickupValue" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="realisedDeliverValue" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="realised_value" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>deprecated and export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="specified_amount" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>specific amount as given by the customer</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="task_order_details">
		<xs:sequence>
			<xs:element name="task" type="task" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="task_order">
		<xs:sequence>
			<xs:group ref="order_base_part1"/>
			<xs:element name="amounts" type="task_order_amounts" minOccurs="0"/>
			<xs:group ref="order_base_part2"/>
			<xs:group ref="task_order_details"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="task_window">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime"/>
			<xs:element name="till_instant" type="datetime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="taskReferences">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="taskId" type="id"/>
				<xs:element name="transport_task">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="orderId" type="id"/>
							<xs:element name="task_spec_code">
								<xs:annotation>
									<xs:documentation>pickup or deliver</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="code">
										<xs:enumeration value="pickup"/>
										<xs:enumeration value="deliver"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="minDuration" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>minimum duration between tasks in seconds</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="maxDuration" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>maximum duration in seconds between tasks</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="earliestDaysOffset" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>minimum number of days between tasks</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="latestDaysOffset" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>maximum number of days between tasks</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="workDaysOnly" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>specifies if given days offset applies to work days only</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="taskSearchCriteria">
		<xs:attribute name="index" type="xs:integer">
			<xs:annotation>
				<xs:documentation>index of task within order</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="tax">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="percentage" type="xs:float"/>
			<xs:element name="kind">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="VAT"/>
						<xs:enumeration value="sales tax"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="temporaryResource">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="templateId" type="id"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="time_window">
		<xs:choice>
			<xs:sequence minOccurs="0">
				<xs:sequence minOccurs="0">
					<xs:element name="from_time" type="time"/>
					<xs:element name="from_offset" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:short">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
				<xs:sequence minOccurs="0">
					<xs:element name="till_time" type="time"/>
					<xs:element name="till_offset" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:short">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:sequence>
			<xs:sequence minOccurs="0">
				<xs:element name="from_instant" type="datetime" minOccurs="0"/>
				<xs:element name="till_instant" type="datetime" minOccurs="0"/>
			</xs:sequence>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="transport_details">
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="department" type="department"/>
				<xs:element name="department_code" type="code"/>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="plan_region" type="plan_region"/>
				<xs:element name="plan_region_code" type="code"/>
			</xs:choice>
			<xs:element name="route_part" type="route_part" minOccurs="0">
				<xs:annotation>
					<xs:documentation>only the first transport can have route_part = pre; only the last can have route_part = post; At least one of the transports of a transport order must have route part = main.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="transport_order_amounts">
		<xs:sequence>
			<xs:element name="amount" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="unit_code" type="code"/>
						<xs:element name="value" type="xs:double"/>
						<xs:element name="minimum_value" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Only for unit that is used for load assignment.
When empty a minimum will be derived from the amount value.
When the amount value is changed and no minimum tag is given then the minimum will be automatically changed according to the new amount value.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="maximum_value" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Only for unit that is used for load assignment.
When empty a maximum will be derived from the amount value.
When the amount value is changed and no maximum tag is given then the maximum will be automatically changed according to the new amount value.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="realisedPickupValue" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="realisedDeliverValue" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="realised_value" type="xs:double" minOccurs="0">
							<xs:annotation>
								<xs:documentation>deprecated and export only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="specified_amount" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>specific amount as given by the customer</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="transport_order_details">
		<xs:sequence>
			<xs:element name="pickup_task" type="transport_task"/>
			<xs:element name="delivery_task" type="transport_task"/>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>import only</xs:documentation>
				</xs:annotation>
				<xs:element name="transport_details" type="transport_details" minOccurs="0"/>
				<xs:sequence>
					<xs:element name="plan_region" type="plan_region" minOccurs="0">
						<xs:annotation>
							<xs:documentation>deprecated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cross_docks" minOccurs="0">
						<xs:annotation>
							<xs:documentation>indicates that there are additional pickup and deliver addresses</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="transport_details" type="transport_details" minOccurs="0">
									<xs:annotation>
										<xs:documentation>details of first transport</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:sequence maxOccurs="unbounded">
									<xs:element name="cross_dock">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="addressId" type="id"/>
												<xs:element name="task_window_strategy" minOccurs="0">
													<xs:annotation>
														<xs:documentation>default is transport_windows</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction base="xs:string">
															<xs:enumeration value="no_windows"/>
															<xs:enumeration value="transport_windows"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="transport_details" type="transport_details" minOccurs="0">
										<xs:annotation>
											<xs:documentation>details of the next transport after the cross_dock</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="transport_order">
		<xs:sequence>
			<xs:group ref="order_base_part1"/>
			<xs:element name="amounts" type="transport_order_amounts" minOccurs="0"/>
			<xs:group ref="order_base_part2"/>
			<xs:group ref="transport_order_details"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="transport_task">
		<xs:sequence>
			<xs:choice>
				<xs:element name="address" type="address_with_optional_id"/>
				<xs:element name="addressId" type="id"/>
				<xs:element name="station" type="station_with_optional_id"/>
				<xs:element name="stationId" type="id"/>
			</xs:choice>
			<xs:choice>
				<xs:element name="task_window" type="task_window">
					<xs:annotation>
						<xs:documentation>deprecated</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:sequence>
					<xs:element name="start_window" type="datetime_window" minOccurs="0"/>
					<xs:element name="finish_window" type="datetime_window" minOccurs="0"/>
				</xs:sequence>
			</xs:choice>
			<xs:element name="appointment_window" type="appointment_window" minOccurs="0"/>
			<xs:element name="duration_unit_of_measurement_code" type="duration_unit_of_measurement_code" minOccurs="0"/>
			<xs:element name="duration" type="duration" minOccurs="0"/>
			<xs:element name="minTemperature" type="xs:float" minOccurs="0"/>
			<xs:element name="maxTemperature" type="xs:float" minOccurs="0"/>
			<xs:element name="realisedTemperature" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>export only</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="calendar" type="calendar" minOccurs="0"/>
			<xs:element name="preferred_instant" type="datetime" minOccurs="0"/>
			<xs:element name="preferred_resources" type="resources" minOccurs="0"/>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="reference" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:choice>
				<xs:element name="task_cluster" type="task_cluster" minOccurs="0"/>
				<xs:element name="task_clusters" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="task_cluster" type="task_cluster" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="predecessor_tasks" type="taskReferences" minOccurs="0"/>
			<xs:element name="successor_tasks" type="taskReferences" minOccurs="0"/>
			<xs:element name="task_position" type="task_position" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="transports">
		<xs:sequence>
			<xs:element name="transport" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="pickup_taskId" type="id"/>
						<xs:element name="deliver_taskId" type="id"/>
						<xs:choice>
							<xs:element name="pickup_addressId" type="id"/>
							<xs:element name="pickup_stationId" type="id"/>
						</xs:choice>
						<xs:choice>
							<xs:element name="delivery_addressId" type="id"/>
							<xs:element name="delivery_stationId" type="id"/>
						</xs:choice>
						<xs:element name="route_part" type="route_part"/>
						<xs:element name="department" type="department"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="trip">
		<xs:annotation>
			<xs:documentation>export only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="trip_status" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="unplanned"/>
						<xs:enumeration value="planned"/>
						<xs:enumeration value="complete"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="template_code" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="40"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="trip_group">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="code" type="code"/>
						<xs:element name="name" type="name" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="department" type="department"/>
			<xs:sequence>
				<xs:element name="from_instant" type="datetime" minOccurs="0"/>
				<xs:element name="till_instant" type="datetime" minOccurs="0"/>
			</xs:sequence>
			<xs:sequence>
				<xs:element name="start_window" type="datetime_window" minOccurs="0"/>
				<xs:element name="finish_window" type="datetime_window" minOccurs="0"/>
			</xs:sequence>
			<xs:element name="reference_start_instant" type="datetime" minOccurs="0"/>
			<xs:element name="reference_finish_instant" type="datetime" minOccurs="0"/>
			<xs:element name="price_categories" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="price_category_code" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="capabilities" type="capabilities" minOccurs="0"/>
			<xs:element name="orderId" type="id" minOccurs="0"/>
			<xs:element name="cost" type="cost" minOccurs="0"/>
			<xs:element name="allowForProposalPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="allowForBatchPlan" type="xs:boolean" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:choice>
				<xs:element name="joined_resource_shift" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="id" type="id"/>
							<xs:element name="resources" type="resourcesWithChoice"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="joined_tripId" type="id" minOccurs="0"/>
			</xs:choice>
			<xs:choice>
				<xs:element name="action" type="action" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="section" type="trip" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
			<xs:element name="udfields" type="udfields" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="timestamp" type="xs:dateTime"/>
		<xs:attribute name="username" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="udfields">
		<xs:sequence>
			<xs:element name="udfield" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>value of the user defined field</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:attribute name="name" type="xs:string" use="required">
						<xs:annotation>
							<xs:documentation>name of the user defined field</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="updateCalendar">
		<xs:sequence>
			<xs:element name="from_instant" type="datetime">
				<xs:annotation>
					<xs:documentation>start of time window to be updated</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="till_instant" type="datetime">
				<xs:annotation>
					<xs:documentation>end of time window to be updated</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="date_entries" type="date_entries"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="unit">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="user">
		<xs:sequence>
			<xs:element name="id" type="id"/>
			<xs:element name="userName">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="userFullName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="userDescription" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="accountEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>defaults to false when not given</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="authenticationProvider" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The password-based authentication provider for this user. This authentication provider is only invoked when the user logs in with a user name and password. The default value is specified in a setting.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="ComtecAuthenticationProvider"/>
						<xs:enumeration value="LdapAuthenticationProvider"/>
						<xs:enumeration value="DisabledAuthenticationProvider"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="userGroups" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="userGroupName" maxOccurs="unbounded">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="50"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="visit_schedule">
		<xs:sequence>
			<xs:element name="code" type="code"/>
			<xs:element name="name" type="name"/>
			<xs:element name="start_date" type="date">
				<xs:annotation>
					<xs:documentation>absolute start date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="number_of_days" type="xs:positiveInteger">
				<xs:annotation>
					<xs:documentation>lenght in days of the visit schedule</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valid_from_date" type="date" minOccurs="0"/>
			<xs:element name="valid_till_date" type="date" minOccurs="0"/>
			<xs:element name="comment" type="comment" minOccurs="0"/>
			<xs:element name="visits">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="visit" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="orderId" type="id">
										<xs:annotation>
											<xs:documentation>external id of an order template</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="date" type="date">
										<xs:annotation>
											<xs:documentation>absolute date and will be interpreted as relative to visit schedule start date</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="amounts" type="amounts" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
