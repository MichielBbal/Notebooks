@startuml
class Organizations.Organization{
companyId
id
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
lastCheckDate
checkedBy
}
class Organizations.OrganizationCreate{
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
}
class Organizations.OrganizationUpdate{
name
email
phone
mobilePhone
chamberOfCommerceNumber
chamberOfCommerceCity
vatNumber
address
canContactByCorrespondence
canContactByPhone
}
class Persons.Gender{
id
description
}
class Persons.MaritalStatus{
id
description
}
class Persons.Person{
companyId
id
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
gender
maidenName
maritalStatus
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
lastCheckDate
checkedBy
}
class Persons.PersonCreate{
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
genderId
maidenName
maritalStatusId
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
}
class Persons.PersonUpdate{
firstName
lastName
initials
infix
introductoryName
introductory
birthDate
deceasedDate
genderId
maidenName
maritalStatusId
email
phone
mobilePhone
address
canContactByCorrespondence
canContactByPhone
}
class PlanProposal.BlockTime{
startDateTime
endDateTime
description
}
class PlanProposal.PlanProposal{
id
deadlineExceeded
startDateTime
endDateTime
resource
blockTime
sequence
}
class PlanProposal.PlanProposalReschedule{
resourceId
resourceEmplId
startDateTime
endDateTime
planProcessId
}
class PlanProposal.Resource{
id
employeeId
name
}
class Projects.Project{
id
description
parentId
status
type
responsible
responsibleSales
responsibleFinancial
responsibleBackup
responsiblePrincipal
responsibleBudgetHolder
createdDate
estimatedStartDate
estimatedEndDate
constructionStartDate
constructionEndDate
postPonedEndDate
propertyObject
suppliers
}
class Projects.ProjectStatus{
id
description
}
class Projects.ProjectType{
id
description
}
class Projects.Responsible{
id
name
phoneWork
emailWork
}
class Projects.Supplier{
id
name
phone
email
phoneWork
emailWork
address
group
referenceId
referenceType
}
class PurchaseContracts.PurchaseContract{
id
externalReference
description
notification
amountExclTax
amountInclTax
vatReverse
purchaseType
status
startDate
endDate
alterationDate
cancelDate
closeDate
project
vendor
budgetHolder
buyer
administrator
workflowStatus
company
}
class PurchaseContracts.PurchaseContractKind{
id
description
}
class PurchaseContracts.PurchaseContractLine{
endDate
itemDescription
itemId
startDate
}
class PurchaseContracts.PurchaseContractSearchResult{
administrator
companyId
description
endDate
notes
objectId
purchaseContractId
purchaseContractKind
purchaseContractLines
purchaseContractType
purchaseContractexternalReference
realEstateObjectid
referenceId
referenceType
serviceObjectId
startDate
supplier
}
class PurchaseContracts.PurchaseContractType{
id
description
}
class PurchaseContracts.PurchaseStatus{
id
description
}
class PurchaseContracts.PurchaseType{
id
description
}
class PurchaseContracts.PurchaseVatReverse{
id
description
}
class PurchaseContracts.Vendor{
id
name
email
phone
mobilePhone
}
class RealEstateProperties.AdaptationType{
id
description
}
class RealEstateProperties.Block{
id
description
}
class RealEstateProperties.BuildingCategory{
id
description
}
class RealEstateProperties.BuildingType{
id
description
}
class RealEstateProperties.Category{
id
description
}
class RealEstateProperties.Cluster{
id
memo
name
objectId
type
ownershipType
category
builtYear
inExploitation
outExploitation
address
}
class RealEstateProperties.ClusterHierarchy{
id
name
parentClusterId
}
class RealEstateProperties.ClusterRelation{
id
referenceType
referenceId
roleId
roleType
roleDescription
contactType
contactId
validFrom
validTo
name
email
phone
mobile
}
class RealEstateProperties.ClusterType{
id
description
}
class RealEstateProperties.Color{
id
description
}
class RealEstateProperties.Compensation{
id
description
}
class RealEstateProperties.ContractSummary{
companyId
id
description
customer
}
class RealEstateProperties.CustomerSummary{
id
referenceType
referenceId
}
class RealEstateProperties.Destination{
id
description
}
class RealEstateProperties.District{
id
description
}
class RealEstateProperties.Equipment{
companyId
id
name
description
equipmentType
brand
standard
color
unit
compensation
maximumCompensation
validFrom
validTo
adaptationType
amount
quantity
remark
origin
supplierMaintainedBy
supplierPlacedBy
warrantyEndDate
}
class RealEstateProperties.EquipmentBrand{
id
description
}
class RealEstateProperties.EquipmentStandard{
id
description
}
class RealEstateProperties.EquipmentType{
id
description
}
class RealEstateProperties.FinancialComplex{
id
description
}
class RealEstateProperties.Floor{
id
description
}
class RealEstateProperties.Housing{
id
description
}
class RealEstateProperties.LandRegister{
coordinateX
coordinateY
registerIndexNumber
registerIndexSurface
registerIndexCharacter
registerPage
registerSection
}
class RealEstateProperties.Neighbourhood{
id
description
}
class RealEstateProperties.OperationalDestination{
id
description
}
class RealEstateProperties.OwnershipType{
id
description
}
class RealEstateProperties.PlotType{
id
description
}
class RealEstateProperties.PropertyEvaluation{
evaluationType
externalReference
startDate
value
year
}
class RealEstateProperties.PropertyEvaluationPostEntity{
evaluationTypeId
externalReference
startDate
value
year
}
class RealEstateProperties.PropertyEvaluationType{
id
description
}
class RealEstateProperties.PropertyObject{
referenceType
referenceId
description
}
class RealEstateProperties.PropertyOriginType{
id
description
}
class RealEstateProperties.PropertyScoring{
companyId
buildingId
scoringName
scoringPoints
scoringSystemId
propertyScoringRows
}
class RealEstateProperties.PropertyScoringRow{
sequence
description
pointAspects
pointGroups
value
unit
}
class RealEstateProperties.PropertySearchResult{
serviceObject
contract
preliminaryContract
office
referenceType
referenceTypeId
referenceTypeDescription
street
houseNumber
houseNumberAddition
zipCode
city
country
realEstateObject
}
class RealEstateProperties.Rayon{
id
description
}
class RealEstateProperties.RealEstateAvailableForRent{
availableForRentDate
}
class RealEstateProperties.RealEstateCategory{
id
description
}
class RealEstateProperties.RealEstateObjectCluster{
clusters
companyId
id
objectId
name
buildingCategory
buildingType
destination
district
cbsDistrict
type
financialComplex
technicalComplex
groundId
housing
neighbourhood
cbsNeighbourhood
plotType
ownershipType
builtYear
renovationYear
contractForms
maximumRentAmount
grossRent
netRent
eligibleRent
address
buildingId
realEstateType
operationalDestination
floor
rayon
landRegister
typeObjectSpace
targetRent
inExploitation
outExploitation
realEstateCategory
availableForRentDate
block
mutationId
segment
}
class RealEstateProperties.RealEstateObjectPrice{
companyID
eligibleRent
netRent
grossRent
rentComponents
}
class RealEstateProperties.RealEstateOffice{
referenceType
referenceId
displayName
}
class RealEstateProperties.RealEstateRelation{
id
referenceType
referenceId
roleId
roleType
roleDescription
contactType
contactId
validFrom
validTo
name
email
phone
mobile
}
class RealEstateProperties.RealEstateType{
id
description
}
class RealEstateProperties.RegisterIndexCharacter{
id
description
}
class RealEstateProperties.Segment{
id
description
}
class RealEstateProperties.ServiceObjectBasic{
id
companyId
description
objectType
}
class RealEstateProperties.Supplier{
email
emailWork
id
mobilePhone
name
phone
phoneWork
}
class RealEstateProperties.TechnicalComplex{
id
description
}
class RealEstateProperties.TypeObjectSpace{
id
description
}
class RentalDistribution.CandidateCreate{
id
registrant
coRegistrant
}
class RentalDistribution.CoRegistrantCreate{
id
birthdate
referenceType
referenceId
income
}
class RentalDistribution.RegistrantCreate{
id
birthdate
aggregateIncome
income
houseHoldId
purposeGroupId
familySize
numberOfChildren
bankAccount
referenceType
referenceId
}
class ShareWorX.Case{
id
name
title
status
responsiblePerson
responsibleUnit
}
class ShareWorX.Document{
id
documentNumber
title
date
fileVersions
responsiblePerson
responsibleUnit
direction
}
class ShareWorX.FileUploadMetadata{
fileName
checksum
indexes
}
class ShareWorX.FileVersion{
id
role
fileName
url
}
class Suppliers.PreInvoice{
amountHigh
amountLow
amountNoTax
autoIncasso
bankAccountId
bookDate
buyer
chamberOfCommerceNumber
deliveryDate
description
documentFileName
g_Account
g_Amount
invoiceAmount
invoiceBase64
invoiceDate
invoiceNumber
invoiceSource
specs
taxAmountHigh
taxAmountLow
taxDate
taxShifted
vatNumber
vendor
}
class Suppliers.PreInvoiceAddress{
address
city
name
zipCode
}
class Suppliers.Specification{
amount
articleId
chargedTo
id
lineNum
lineQuanity
location
typeId
unit
vatIndicator
}
class Suppliers.StatusLogParameters{
description
entityId
entityName
statusCode
statusDateTime
}
class Suppliers.SupplierGroup{
id
description
}
class TimeStampQueue.TimeStampQueue{
sourceCompanyId
sourceEntity
sourceEntityId
sourceAction
targetCompanyId
targetEntity
targetEntityId
targetAction
}
class WebUsers.WebUser{
id
referenceId
referenceType
}
class WebUsers.WebUserCreate{
login
password
referenceId
referenceType
}
class WebUsers.WebUserCredentials{
login
password
}
class WebUsers.WebUserCredentialsUpdate{
login
password
newPassword
}
class WebUsers.WebUserPasswordToken{
passwordToken
}
class WebUsers.WebUserPasswordTokenRequest{
login
}
class WebUsers.WebUserPasswordTokenReset{
login
passwordToken
newPassword
}
class Workflow.Category{
id
description
}
class Workflow.DelegateInput{
employeeId
comment
}
class Workflow.Dimension{
sectionName
sectionId
sequence
description
}
class Workflow.ExpensesSpecification{
id
project
amountDebet
amountCredit
taxItemGroup
taxGroup
transactionText
transactionDate
category
interCompany
}
class Workflow.InvoiceReason{
reasonCodeId
description
type
id
companyId
}
class Workflow.Item{
id
description
}
class Workflow.LedgerSpecification{
id
dimensions
amountDebet
amountCredit
taxItemGroup
taxGroup
transactionText
transactionDate
interCompanyId
}
class Workflow.ProcurementStatus{
id
description
}
class Workflow.Project{
id
name
projectGroup
}
class Workflow.ProjectCategory{
id
description
}
class Workflow.ProjectGroup{
id
description
}
class Workflow.PurchaseOrder{
id
name
contractType
status
deliveryDate
project
lines
assignedTo
booked
vendor
budgetHolder
budgetExceedingAmount
workflowStatus
company
errorMessage
procurementStatus
workflowDescription
toApproveOrSpecify
memo
orderer
type
}
class Workflow.PurchaseOrderContractType{
id
description
}
class Workflow.PurchaseOrderLine{
id
name
lineNumber
status
taxItemGroup
taxGroup
taxValue
taxAmount
specificationAmount
quantity
unitPrice
specificationUnitPrice
nettAmount
deliveryDate
remainDelivery
sellingPrice
specificationSellingPrice
project
packingSlip
unit
item
projectCategory
dimensions
booked
budgetAvailable
budgetExceedingAmount
budgetRealized
budgetReserved
budgetTotal
invoicedAmount
contractDate
workflowStatus
}
class Workflow.PurchaseOrderQuotation{
acceptedBy
amount
deliveryDate
productName
quantity
status
unit
}
class Workflow.PurchaseOrderTerm{
description
id
status
termAmount
termDate
}
class Workflow.PurchaseStatus{
id
description
}
class Workflow.ReasonType{
id
description
}
class Workflow.TaxGroup{
id
description
}
class Workflow.TaxItemGroup{
id
description
}
class Workflow.TrackingStatus{
id
description
}
class Workflow.TrackingType{
id
description
}
class Workflow.Vendor{
id
name
email
phone
mobilePhone
address
}
class Workflow.VendorInvoice{
id
company
voucher
vendor
amount
amountInclTax
taxAmount
transactionText
invoiceExternalId
dueDate
invoiceDate
transactionDate
invoiceErrors
assignedTo
specified
secondOpinion
status
toApproveOrSpecify
}
class Workflow.VendorInvoiceNote{
id
employee
action
comment
createDateTime
}
class Workflow.WorkflowInfo{
createdDateTime
message
comment
trackingStatus
trackingType
responsibleEmployee
}
class Workflow.WorkflowInput{
comment
}
class Workflow.WorkflowStatus{
id
description
}
@enduml